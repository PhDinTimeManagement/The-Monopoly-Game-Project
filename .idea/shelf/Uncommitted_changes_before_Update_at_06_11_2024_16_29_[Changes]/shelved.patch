Index: src/Controller/GameController.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># GameController.py\r\n\r\nimport json\r\nimport os.path\r\n\r\nfrom src.Model.Gameboard import *\r\nfrom src.Model.Player import *\r\nfrom src.Model.GameLogic import GameLogic\r\nfrom src.Controller.InputHandler import InputHandler\r\nfrom datetime import datetime\r\n\r\nclass GameController:\r\n    def __init__(self):\r\n        self.save_name = None\r\n        self.board = Gameboard()\r\n        self.game_logic = GameLogic()\r\n        self.player_list = []\r\n        self.broke_list = []\r\n        self.input_handler = InputHandler()\r\n\r\n    def get_player_list(self):\r\n        return self.player_list\r\n\r\n    def set_player_list(self, player_list):\r\n        self.player_list = player_list.copy()\r\n\r\n    def get_broke_player_list(self):\r\n        return self.broke_list\r\n\r\n    def set_broke_player_list(self, broke_list):\r\n        self.broke_list = broke_list.copy()\r\n\r\n    def get_current_round(self):\r\n        return self.game_logic.get_current_round()\r\n\r\n    def get__turn(self):\r\n        return self.game_logic.get_player_turn()\r\n\r\n    def set__turn(self, turn):\r\n        self.game_logic._player_turn = turn\r\n\r\n    def set_current_round(self, new_round):\r\n        self.game_logic.set_current_round(new_round)\r\n\r\n    def set_save_name(self, save_name):\r\n        self.save_name = save_name\r\n\r\n    def set_remove_last_round(self, remove_last_round):\r\n        self.game_logic.set_removed_last_round(remove_last_round)\r\n\r\n    # TODO By Kent: We need to program to detect the click events from the users. The click will call the functions for us. \"\"\"\r\n    def start_game(self):\r\n        self.initialize_players()\r\n        while not GameLogic.game_ends(self.game_logic,self.get_player_list()):\r\n            #TODO self.play_round()\r\n            self.game_logic.set_current_round(self.game_logic.get_current_round() + 1)\r\n\r\n    \"\"\" This function is called after the 'Play' button is clicked in the game \"\"\"\r\n    def button_play(self):\r\n        self.game_logic.set_player_turn(self.get_player_list())\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n       #TODO <show the roll dice button and display player_this_turn ONLY>\r\n        pass\r\n\r\n    def determine_next_round(self,player_this_turn):\r\n        if GameLogic.player_broke(player_this_turn):\r\n            GameLogic.player_out(self.game_logic, player_this_turn, self.get_player_list(), self.get_broke_player_list())\r\n\r\n        self.game_logic.set_current_round(self.game_logic.get_current_round() + 1)  # Update the current round by +1\r\n        if GameLogic.game_ends(self.get_player_list(), self.game_logic.get_current_round()):  # When the game ends\r\n            GameLogic.display_winner(self.game_logic, self.get_player_list())\r\n        else:\r\n            self.game_logic.set_player_turn(self.get_player_list())\r\n            player_next_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n            #TODO <Display the player for next round>\r\n            if player_next_turn.get_jail_status():\r\n                if player_next_turn.get_fine_payed():\r\n                    pass\r\n                    # TODO <Display the roll only, do not display the pay fine button>\r\n                elif GameLogic.player_third_round(player_next_turn):\r\n                    #TODO <Display roll dice only>\r\n                    pass\r\n                else:\r\n                    pass\r\n                    # TODO <Display the pay fine button as well as the roll button>\r\n\r\n                # waiting the click event\r\n                pass\r\n            else:\r\n                # TODO <The button no need to change, display just Roll_dice>\r\n                # waiting the click event\r\n                pass\r\n\r\n    @staticmethod\r\n    def land_and_complete_round(tile, player_this_turn):\r\n        tile_type = tile.get_tile_type()\r\n        action = None\r\n\r\n        if tile_type == \"property\":\r\n            if tile.get_owner() is None:\r\n                # TODO show button buy or not buy\r\n                # gui.wait_variable(click_var)    # waits for the click_var to update before allowing execution\r\n                pass\r\n            else:\r\n                # TODO update view for rent\r\n                action = \"rent\"\r\n            tile.player_landed(player_this_turn, action)\r\n            return\r\n        elif tile_type == \"jail\":\r\n             # TODO update view just visiting\r\n            pass\r\n        elif tile_type == \"go\":\r\n            # TODO update view\r\n            pass\r\n        elif tile_type == \"go_to_jail\":\r\n            # TODO jail animation\r\n            pass\r\n        elif tile_type == \"income_tax\":\r\n            # TODO tax animation\r\n            pass\r\n        elif tile_type == \"free_parking\":\r\n            # TODO parking animation\r\n            pass\r\n        tile.player_landed(player_this_turn)\r\n\r\n    \"\"\"This function is called after pressing the 'Roll' button in the game window.\"\"\"\r\n    def roll_dice(self):\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        dice_roll1, dice_roll2 = GameLogic.roll_dice()\r\n        tile = GameLogic.player_move(dice_roll1+dice_roll2,player_this_turn,self.board)\r\n        #TODO<Call function to display the animation in the view>\r\n        self.land_and_complete_round(tile, player_this_turn)\r\n        self.determine_next_round(player_this_turn)\r\n\r\n    # Roll function for player in jail\r\n    def in_jail(self):\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        dice_roll1, dice_roll2 = GameLogic.roll_dice()\r\n        if (not GameLogic.same_double(dice_roll1,dice_roll2)) and GameLogic.player_third_round(player_this_turn):\r\n            # TODO<show the pay fine button only, after paying fine, the player is moved (Got to pay_fine function)\r\n            pass\r\n        else:\r\n            flag = False\r\n            if GameLogic.same_double(dice_roll1,dice_roll2):\r\n                #TODO <on double, going out of jail>\r\n                flag = True\r\n            elif GameLogic.player_second_round(player_this_turn) and player_this_turn.get_fine_payed():\r\n                #TODO <Out of jail>\r\n                flag = True\r\n            if flag:\r\n                self.board.tiles[player_this_turn.get_current_square()].freeplayer(player_this_turn)\r\n                information = GameLogic.player_move(dice_roll1 + dice_roll2, player_this_turn, self.board)\r\n                # TODO<Call function to display the animation in the view>\r\n                self.land_and_complete_round(information, player_this_turn)\r\n            else:\r\n                #TODO <Player is not moved>\r\n                pass\r\n            self.determine_next_round(player_this_turn)\r\n\r\n\r\n    def pay_fine(self,dice_roll1,dice_roll2):\r\n        #pay_fine_logic\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        GameLogic.pay_fine(self.game_logic,player_this_turn)\r\n        if player_this_turn.player_third_round(player_this_turn):\r\n            self.board.tiles[player_this_turn.get_current_square()].freeplayer(player_this_turn)\r\n            information = GameLogic.player_move(dice_roll1 + dice_roll2, player_this_turn, self.board)\r\n            # TODO<Call function to display the animation in the view>\r\n            self.land_and_det_next_round(information, player_this_turn)\r\n            self.determine_next_round(player_this_turn)\r\n        #TODO <Show the money is deduced>\r\n\r\n    def buy_button(self):\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        self.board.tiles[player_this_turn.get_current_square()].buy(player_this_turn)\r\n        #TODO <show the property bought>\r\n    \r\n    def no_buy_button(self):\r\n        #TODO <Show did not buy property>\r\n        return\r\n        \r\n    \"\"\"By Kent: we don't need loop here. Instead we get a list from the view after the player clicks 'play'\"\"\"\r\n    def initialize_players(self):\r\n        num_players = self.input_handler.get_name_or_players(\"Enter the number of players (2-6): \")\r\n        for i in range(num_players):\r\n            player_name = self.input_handler.get_name_or_players(f\"Enter name for Player {i + 1}: \")\r\n            new_player = Player(player_name)\r\n            self.get_player_list().append(new_player)\r\n        print(\"Players initialized successfully.\\n\")\r\n\r\n    def end_game(self):\r\n        # Need to modify the logic in GameLogic endgame\r\n        pass\r\n\r\n    # noinspection PyTypeChecker\r\n    def save_game(self, save_name):\r\n        # gets current directory in which the program is running\r\n        save_directory = os.path.dirname(os.path.abspath(__file__))\r\n\r\n        # moves up and into the saves directory and normalizes the path\r\n        save_directory = os.path.normpath(os.path.join(save_directory, \"..\", \"..\", \"saves\"))\r\n        message1 = \"\"\r\n\r\n        # ensures directory existence or creates\r\n        if not os.path.exists(save_directory):\r\n            os.makedirs(save_directory)\r\n            message1 = \"Save directory deleted or non existent --> Creating\"\r\n\r\n        save_instance = SavedGame(save_name, self)\r\n        game_data = save_instance.to_dictionary()\r\n        file_path = os.path.join(save_directory, f'{save_name}.json')\r\n        with open(file_path, 'w') as save_file:\r\n            json.dump(game_data, save_file, indent=4)\r\n            message = \"Game saved successfully.\\n\"\r\n        return f\"{message1}\\n{message}\"\r\n\r\n\r\n    def load_game(self, load_name):\r\n        # gets current directory in which the program is running\r\n        save_directory = os.path.dirname(os.path.abspath(__file__))\r\n\r\n        # moves up and into the saves directory and normalizes the path\r\n        save_directory = os.path.normpath(os.path.join(save_directory, \"..\", \"..\", \"saves\"))\r\n\r\n        file_path = os.path.join(save_directory, f'{load_name}.json')\r\n\r\n        # parse save file into a dictionary and handles exceptions\r\n        try:\r\n            with open(file_path, 'r') as game_data:\r\n                game_data_dict = json.load(game_data)\r\n        except FileNotFoundError:\r\n            print(\"Game saved does not exist.\")\r\n            return\r\n        except json.JSONDecodeError:\r\n            print(\"Error in reading save file.\")\r\n            return\r\n\r\n        # pulls information from the dictionary into respective variables\r\n        self.set_save_name(game_data_dict[\"save_name\"])\r\n        self.set_current_round(game_data_dict[\"current_round\"])\r\n        self.set__turn(game_data_dict[\"_turn\"])\r\n        self.set_remove_last_round(game_data_dict[\"remove_last_round\"])\r\n\r\n        # gameboard_setup is a list of dictionaries, will cycle and update appropriately\r\n        gameboard_info = game_data_dict[\"gameboard_setup\"]\r\n        for tile_info, i in zip(gameboard_info, range(20)):\r\n            self.board.tiles[i].update_name_pos_type(tile_info[\"name\"], tile_info[\"board_pos\"], tile_info[\"tile_type\"])\r\n            tile_type = tile_info[\"tile_type\"]\r\n            if tile_type == \"property\":\r\n                self.board.tiles[i].update_values(tile_info[\"price\"], tile_info[\"rent\"], tile_info[\"owner\"], tile_info[\"color\"])\r\n            elif tile_type == \"income_tax\":\r\n                self.board.tiles[i].update_values(tile_info[\"tax_percentage\"])\r\n            elif tile_type == \"jail\":\r\n                self.board.tiles[i].update_values(tile_info[\"jailed_players\"])\r\n            elif tile_type == \"go\":\r\n                self.board.tiles[i].update_values(tile_info[\"pass_prize\"])\r\n\r\n        # creates players objects and copies information from the dictionary\r\n        players = game_data_dict[\"players_list\"]\r\n        for p_data in players:\r\n            new_player = Player(\"\")\r\n            new_player.update_values(p_data[\"_username\"], p_data[\"_current_money\"], p_data[\"_jail_status\"], p_data[\"_fine_payed\"], p_data[\"_current_square\"], p_data[\"_in_jail_turns\"], p_data[\"_properties\"])\r\n            self.player_list.append(new_player)\r\n\r\n        broke_players = game_data_dict[\"broke_list\"]\r\n        for p_data in broke_players:\r\n            new_player = Player(\"\")\r\n            new_player.update_values(p_data[\"_username\"], p_data[\"_current_money\"], p_data[\"_jail_status\"], p_data[\"_fine_payed\"], p_data[\"_current_square\"], p_data[\"_in_jail_turns\"], p_data[\"_properties\"])\r\n            self.broke_list.append(new_player)\r\n\r\n# this class will copy the current game instance\r\nclass SavedGame:\r\n    def __init__(self, save_name, game_controller):\r\n        # Gets the name of the save and current round\r\n        self.save_name = save_name\r\n        self.save_time = datetime.now().strftime(\"%H:%M %d-%m-%Y\")\r\n        self._turn = game_controller.get__turn()\r\n        self.remove_last_round = game_controller.game_logic.get_remove_last_round()\r\n        self.current_round = game_controller.get_current_round()\r\n\r\n        # Saves the setup of the gameboard as a list\r\n        self.tiles = game_controller.board.tiles.copy()\r\n\r\n        # Saves players information\r\n        self.player_list = game_controller.get_player_list().copy()\r\n        self.broke_list = game_controller.get_broke_player_list().copy()\r\n\r\n    def to_dictionary(self):\r\n        # unpacks list of objects to a list of dictionary entries\r\n        gameboard_data = [tile.__dict__ for tile in self.tiles]\r\n        player_data = [player.__dict__ for player in self.player_list]\r\n        broke_player_data = [player.__dict__ for player in self.broke_list]\r\n\r\n        return {\r\n            \"save_name\": self.save_name,\r\n            \"save_time\": self.save_time,\r\n            \"_turn\": self._turn,\r\n            \"remove_last_round\": self.remove_last_round,\r\n            \"current_round\": self.current_round,\r\n            \"gameboard_setup\": gameboard_data,\r\n            \"players_list\": player_data,\r\n            \"broke_list\": broke_player_data\r\n        }\r\n\r\n    def get_save_name(self):\r\n        return self.save_name
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/GameController.py b/src/Controller/GameController.py
--- a/src/Controller/GameController.py	(revision 3e4c99ef9af7bc26a312987cd417d3ad38cf9de0)
+++ b/src/Controller/GameController.py	(date 1730881278114)
@@ -157,7 +157,6 @@
                 pass
             self.determine_next_round(player_this_turn)
 
-
     def pay_fine(self,dice_roll1,dice_roll2):
         #pay_fine_logic
         player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]
Index: src/Model/GameLogic.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\n\r\nfrom src.Controller.GameController import GameController\r\nfrom src.Model.Player import *\r\n\r\n\r\nclass GameLogic:\r\n    \"\"\"a private variable stating the amount of fine needed to be paid for getting out of jail\"\"\"\r\n    def __init__ (self):\r\n        self._fine = 150\r\n        self._removed_last_round = False\r\n        self._current_round = 1\r\n        self._player_turn = -1\r\n\r\n\r\n    def get_remove_last_round(self):\r\n        return self._removed_last_round\r\n\r\n    def set_removed_last_round(self,value):\r\n        self._removed_last_round = value\r\n\r\n    def get_fine(self):\r\n        return self._fine\r\n\r\n    def set_fine(self,fine):\r\n        self._fine = fine\r\n\r\n    def get_player_turn(self):\r\n        return self._player_turn\r\n\r\n    def set_player_turn(self,players_list):\r\n        #If there is no player removed during last round\r\n        if not self._removed_last_round:\r\n            self._player_turn +=1\r\n        self._removed_last_round = False\r\n        self._player_turn = self._player_turn % len(players_list)\r\n\r\n    def get_current_round(self):\r\n        return self._current_round\r\n\r\n    def set_current_round(self,new_round):\r\n        self._current_round = new_round\r\n\r\n    \"\"\"Get the number rolled from the two dices by a player\"\"\"\r\n    @staticmethod\r\n    def roll_dice():\r\n        return random.randint(1, 4), random.randint(1, 4)\r\n\r\n    \"\"\"The move logic, how a player moves on the board, and the tiles he/she lands or have been through\"\"\"\r\n\r\n    @staticmethod\r\n    def player_move(dice_number, player, gameboard):\r\n        for i in range(0, dice_number):\r\n            player.update_square(1)\r\n            if player.get_square() > 19:\r\n                player.set_square(0)\r\n            # TODO i != dice_number always since range is not inclusive\r\n            if gameboard.tiles[player.get_square()].name == \"Go\" and i != dice_number:\r\n                gameboard.tiles[player.get_square()].player_landed(player, )  # Import Logic for 'Go'\r\n\r\n        # returns the new_tile\r\n        return gameboard.tiles[player.get_square()]\r\n\r\n    \"\"\"Three functions are for in jail\"\"\"\r\n    # TODO what is this???\r\n\r\n    @staticmethod\r\n    def player_first_round(player):\r\n        return player.get_in_jail_turns() == 3\r\n\r\n    @staticmethod\r\n    def player_second_round(player):\r\n        return player.get_in_jail_turns() == 2\r\n\r\n    \"\"\"The player is forced to pay a fine if the player did not pay in the first and second round in jail. \r\n        This condition monitoring should happen in the controller, meaning the controller needs to check \r\n        the condition and apply the correct function\"\"\"\r\n\r\n    @staticmethod\r\n    def player_third_round(player):\r\n        return player.get_in_jail_turns() == 1\r\n\r\n    \"\"\"Check if the result of the two dice rolls are the same\"\"\"\r\n\r\n    @staticmethod\r\n    def same_double(dice_number1, dice_number2):\r\n        return dice_number1 == dice_number2\r\n\r\n    \"\"\"The player gets out of jail as soon as getting the same number on two dices\"\"\"\r\n\r\n    @staticmethod\r\n    def out_jail_on_double(player, dice_number1, dice_number2, gameboard):\r\n        # TODO problem here, wont move properly (NOW FIXED BUT CHECK)\r\n        tile = GameLogic.player_move(dice_number1 + dice_number2, player, gameboard)\r\n        GameController.land_and_complete_round(tile, player)\r\n        gameboard.get_jail_tile().free_player(player)\r\n\r\n    \"\"\"Pay the fine of 150 in jail\"\"\"\r\n\r\n    @staticmethod\r\n    def pay_fine(game_logic,player):\r\n        player.remove_money(game_logic.get_fine())\r\n        player.set_fine_payed(True)\r\n\r\n    \"\"\"Check if player is broke, negative money\"\"\"\r\n\r\n    @staticmethod\r\n    def player_broke(player):\r\n        return player.get_current_money() < 0\r\n\r\n    @staticmethod\r\n    def player_out(game_logic,player, player_list, broke_list):\r\n        player_list.remove(player)\r\n        broke_list.append(player)\r\n        player.delete_all_properties()\r\n        game_logic.set_removed_last_round(True)\r\n\r\n    \"\"\"Check if the game is finished\"\"\"\r\n\r\n    @staticmethod\r\n    def game_ends(player_list,game_round):\r\n        return game_round == 100 or len(player_list)== 1\r\n\r\n    @staticmethod\r\n    def display_winner(game_logic,players_list):\r\n        if game_logic.get_current_round() == 100:\r\n            winner_list = []\r\n            message = \"The winner is: \"\r\n            value = -1\r\n            for player in players_list:\r\n                if player.get_current_money() >= value:\r\n                    winner_list.append(player)\r\n                    message += f\"{player.get_name()}, \"\r\n                    value = player.get_current_money()\r\n            message = f\"{message}with {winner_list[0].get_current_money()} money.\"\r\n            return message\r\n        elif len(players_list) == 1:\r\n            message = f\"The winner is: {players_list[0].get_name()}, with {players_list[0].get_current_money()} money.\"\r\n            return message
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/GameLogic.py b/src/Model/GameLogic.py
--- a/src/Model/GameLogic.py	(revision 3e4c99ef9af7bc26a312987cd417d3ad38cf9de0)
+++ b/src/Model/GameLogic.py	(date 1730881742982)
@@ -62,8 +62,6 @@
         return gameboard.tiles[player.get_square()]
 
     """Three functions are for in jail"""
-    # TODO what is this???
-
     @staticmethod
     def player_first_round(player):
         return player.get_in_jail_turns() == 3
@@ -90,7 +88,6 @@
 
     @staticmethod
     def out_jail_on_double(player, dice_number1, dice_number2, gameboard):
-        # TODO problem here, wont move properly (NOW FIXED BUT CHECK)
         tile = GameLogic.player_move(dice_number1 + dice_number2, player, gameboard)
         GameController.land_and_complete_round(tile, player)
         gameboard.get_jail_tile().free_player(player)
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.12 (pythonProject) (2)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.11\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3e4c99ef9af7bc26a312987cd417d3ad38cf9de0)
+++ b/.idea/misc.xml	(date 1730881278152)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.12 (pythonProject) (2)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="C:\Users\tommy\miniconda3" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/Source Code.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.11\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Source Code.iml b/.idea/Source Code.iml
--- a/.idea/Source Code.iml	(revision 3e4c99ef9af7bc26a312987cd417d3ad38cf9de0)
+++ b/.idea/Source Code.iml	(date 1730881278168)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.11" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"Touch Ups on Gameboard.py v5\" />\r\n    <list id=\"b53ad74c-d01b-4e52-9a34-f524bfab6613\" name=\"Changes by Kent Max Chandra\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Jupyter Notebook\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;PhDinTimeManagement&quot;\n  }\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git\",\n    \"accountId\": \"92e91e34-3118-423c-bd88-520f2a36a0e6\"\n  }\n}]]></component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nZNqtspflyRZqXPpP505un74XG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Python tests.Python tests for test_GameController.TestGameController.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameController.TestGameController.test_load_game.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameController.TestGameController.test_save_game.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_game_ends.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_get_player_turn.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_Gameboard.TestProperty.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests in test_GameController.py.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests in test_GameLogic.py.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests in test_Gameboard.py.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,\n    &quot;Python.DisplayManager.executor&quot;: &quot;Run&quot;,\n    &quot;Python.GUI.executor&quot;: &quot;Run&quot;,\n    &quot;Python.GUI.py.executor&quot;: &quot;Run&quot;,\n    &quot;Python.converter.executor&quot;: &quot;Run&quot;,\n    &quot;Python.gui.executor&quot;: &quot;Run&quot;,\n    &quot;Python.new.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Hp/Desktop/The-Monopoly-Game-Project/src&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\r\n  <component name=\"PyCoverageOptionsProvider\">\r\n    <option name=\"myUseBundledCoveragePy\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Hp\\Desktop\\The-Monopoly-Game-Project\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/assets/dice\" />\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n      <recent name=\"$PROJECT_DIR$/src/View\" />\r\n      <recent name=\"D:\\PolyU\\PolyU Year 3\\COMP3211 Software Engineering\\Project Github\\src\\Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.GUI.py\">\r\n    <configuration name=\"GUI.py\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/View/GUI.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic.test_out_jail_on_double&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_GameController.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_GameController.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_GameLogic.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_GameLogic.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_Gameboard.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_Gameboard.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in tests\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Unittests\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"$USER_HOME$/miniconda3/python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_pattern\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.GUI.py\" />\r\n      <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double\" />\r\n      <item itemvalue=\"Python tests.Python tests in test_Gameboard.py\" />\r\n      <item itemvalue=\"Python tests.Python tests in test_GameController.py\" />\r\n      <item itemvalue=\"Python tests.Python tests in test_GameLogic.py\" />\r\n      <item itemvalue=\"Python tests.Python tests in tests\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.Python tests in tests\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_GameController.py\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_Gameboard.py\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_GameLogic.py\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\r\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729176831318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729176831318</updated>\r\n      <workItem from=\"1729176832503\" duration=\"5256000\" />\r\n      <workItem from=\"1729205014409\" duration=\"9100000\" />\r\n      <workItem from=\"1729216750621\" duration=\"322000\" />\r\n      <workItem from=\"1729217094305\" duration=\"939000\" />\r\n      <workItem from=\"1729258610543\" duration=\"706000\" />\r\n      <workItem from=\"1729259351895\" duration=\"10538000\" />\r\n      <workItem from=\"1729515491755\" duration=\"234000\" />\r\n      <workItem from=\"1729661586409\" duration=\"244000\" />\r\n      <workItem from=\"1729934612284\" duration=\"1836000\" />\r\n      <workItem from=\"1730004190962\" duration=\"1095000\" />\r\n      <workItem from=\"1730024143686\" duration=\"7972000\" />\r\n      <workItem from=\"1730109912025\" duration=\"33000\" />\r\n      <workItem from=\"1730110856482\" duration=\"230000\" />\r\n      <workItem from=\"1730111961934\" duration=\"1279000\" />\r\n      <workItem from=\"1730120246622\" duration=\"12973000\" />\r\n      <workItem from=\"1730199675463\" duration=\"26000\" />\r\n      <workItem from=\"1730208733155\" duration=\"322000\" />\r\n      <workItem from=\"1730278497914\" duration=\"318000\" />\r\n      <workItem from=\"1730278822997\" duration=\"15714000\" />\r\n      <workItem from=\"1730367503069\" duration=\"612000\" />\r\n      <workItem from=\"1730377042614\" duration=\"1385000\" />\r\n      <workItem from=\"1730743920545\" duration=\"780000\" />\r\n      <workItem from=\"1730767053814\" duration=\"1079000\" />\r\n      <workItem from=\"1730770731790\" duration=\"4357000\" />\r\n      <workItem from=\"1730850634269\" duration=\"17838000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"gameboard functions\">\r\n      <created>1729259402457</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259402457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1729259636382</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259636382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Classes V1 created&#10;standard Gameboard initialized and objects created\">\r\n      <created>1729273012131</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729273012131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Updated gameboard and player functions to NEW US8\">\r\n      <created>1729936455309</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729936455309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006659690</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006659690</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006706523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006706523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\">\r\n      <created>1730032008562</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032008562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Touch Ups on Gameboard.py v5\">\r\n      <created>1730113203511</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730113203511</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"gameboard functions\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Classes V1 created&#10;standard Gameboard initialized and objects created\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v2\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\" />\r\n    <MESSAGE value=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Touch Ups on Gameboard.py v5\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/tests/test_GameLogic.py</url>\r\n          <line>55</line>\r\n          <option name=\"timeStamp\" value=\"13\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/The_Monopoly_Game_py$GUI.coverage\" NAME=\"GUI Coverage Results\" MODIFIED=\"1730803344295\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/The_Monopoly_Game_py$GUI_py.coverage\" NAME=\"GUI.py Coverage Results\" MODIFIED=\"1730880477554\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730198824506\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$GUI.coverage\" NAME=\"GUI Coverage Results\" MODIFIED=\"1730825225766\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$Test.coverage\" NAME=\"Test Coverage Results\" MODIFIED=\"1730432574768\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$converter.coverage\" NAME=\"converter Coverage Results\" MODIFIED=\"1730821085160\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$gui.coverage\" NAME=\"gui Coverage Results\" MODIFIED=\"1730294710638\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/The_Monopoly_Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730804742271\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$new.coverage\" NAME=\"new Coverage Results\" MODIFIED=\"1730338734766\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$DisplayManager.coverage\" NAME=\"DisplayManager Coverage Results\" MODIFIED=\"1730822333950\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3e4c99ef9af7bc26a312987cd417d3ad38cf9de0)
+++ b/.idea/workspace.xml	(date 1730881743131)
@@ -4,7 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5" />
+    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5">
+      <change beforePath="$PROJECT_DIR$/.idea/Source Code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Source Code.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/GameController.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/GameController.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/GameLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameLogic.py" afterDir="false" />
+    </list>
     <list id="b53ad74c-d01b-4e52-9a34-f524bfab6613" name="Changes by Kent Max Chandra" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,12 +34,12 @@
     &quot;assignee&quot;: &quot;PhDinTimeManagement&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git",
-    "accountId": "92e91e34-3118-423c-bd88-520f2a36a0e6"
-  }
-}]]></component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git&quot;,
+    &quot;accountId&quot;: &quot;4537f682-7852-42ab-b340-e62171856620&quot;
+  }
+}</component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -67,7 +73,6 @@
     &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
     &quot;Python.DisplayManager.executor&quot;: &quot;Run&quot;,
     &quot;Python.GUI.executor&quot;: &quot;Run&quot;,
-    &quot;Python.GUI.py.executor&quot;: &quot;Run&quot;,
     &quot;Python.converter.executor&quot;: &quot;Run&quot;,
     &quot;Python.gui.executor&quot;: &quot;Run&quot;,
     &quot;Python.new.executor&quot;: &quot;Run&quot;,
@@ -100,8 +105,8 @@
       <recent name="D:\PolyU\PolyU Year 3\COMP3211 Software Engineering\Project Github\src\Model" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.GUI.py">
-    <configuration name="GUI.py" type="PythonConfigurationType" factoryName="Python">
+  <component name="RunManager" selected="Python.GUI">
+    <configuration name="GUI" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -110,9 +115,8 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="SDK_NAME" value="Python 3.11" />
-      <option name="WORKING_DIRECTORY" value="" />
-      <option name="IS_MODULE_SDK" value="false" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/View" />
+      <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
@@ -157,22 +161,6 @@
       <option name="_new_targetType" value="&quot;PATH&quot;" />
       <method v="2" />
     </configuration>
-    <configuration name="Python tests in test_GameLogic.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-      <module name="Source Code" />
-      <option name="ENV_FILES" value="" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_GameLogic.py&quot;" />
-      <option name="_new_targetType" value="&quot;PATH&quot;" />
-      <method v="2" />
-    </configuration>
     <configuration name="Python tests in test_Gameboard.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
@@ -223,28 +211,27 @@
       <method v="2" />
     </configuration>
     <list>
-      <item itemvalue="Python.GUI.py" />
+      <item itemvalue="Python.GUI" />
       <item itemvalue="Python tests.Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double" />
       <item itemvalue="Python tests.Python tests in test_Gameboard.py" />
       <item itemvalue="Python tests.Python tests in test_GameController.py" />
-      <item itemvalue="Python tests.Python tests in test_GameLogic.py" />
       <item itemvalue="Python tests.Python tests in tests" />
     </list>
     <recent_temporary>
       <list>
+        <item itemvalue="Python.GUI" />
         <item itemvalue="Python tests.Python tests in tests" />
         <item itemvalue="Python tests.Python tests in test_GameController.py" />
         <item itemvalue="Python tests.Python tests in test_Gameboard.py" />
         <item itemvalue="Python tests.Python tests for test_GameLogic.TestGameLogic.test_out_jail_on_double" />
-        <item itemvalue="Python tests.Python tests in test_GameLogic.py" />
       </list>
     </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153" />
-        <option value="bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153" />
+        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.23726.102" />
+        <option value="bundled-python-sdk-5e1850174b45-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23726.102" />
       </set>
     </attachedChunks>
   </component>
@@ -280,7 +267,6 @@
       <workItem from="1730743920545" duration="780000" />
       <workItem from="1730767053814" duration="1079000" />
       <workItem from="1730770731790" duration="4357000" />
-      <workItem from="1730850634269" duration="17838000" />
     </task>
     <task id="LOCAL-00001" summary="gameboard functions">
       <created>1729259402457</created>
@@ -397,15 +383,14 @@
     </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730803344295" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
-    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$GUI_py.coverage" NAME="GUI.py Coverage Results" MODIFIED="1730880477554" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
+    <SUITE FILE_PATH="coverage/Game_py$new.coverage" NAME="new Coverage Results" MODIFIED="1730338734766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/Game_py$DisplayManager.coverage" NAME="DisplayManager Coverage Results" MODIFIED="1730822333950" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730824526772" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730804742271" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
+    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730881360455" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
     <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730198824506" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-    <SUITE FILE_PATH="coverage/Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730825225766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
     <SUITE FILE_PATH="coverage/Game_py$Test.coverage" NAME="Test Coverage Results" MODIFIED="1730432574768" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/Game_py$converter.coverage" NAME="converter Coverage Results" MODIFIED="1730821085160" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
     <SUITE FILE_PATH="coverage/Game_py$gui.coverage" NAME="gui Coverage Results" MODIFIED="1730294710638" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
-    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730804742271" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-    <SUITE FILE_PATH="coverage/Game_py$new.coverage" NAME="new Coverage Results" MODIFIED="1730338734766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
-    <SUITE FILE_PATH="coverage/Game_py$DisplayManager.coverage" NAME="DisplayManager Coverage Results" MODIFIED="1730822333950" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/Game_py$converter.coverage" NAME="converter Coverage Results" MODIFIED="1730821085160" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
   </component>
 </project>
\ No newline at end of file
