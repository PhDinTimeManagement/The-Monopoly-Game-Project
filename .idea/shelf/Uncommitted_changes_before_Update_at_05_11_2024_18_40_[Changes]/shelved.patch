Index: src/Controller/GameController.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># GameController.py\r\n\r\nimport json\r\nimport os.path\r\n\r\nfrom src.Model.Gameboard import *\r\nfrom src.Model.Player import *\r\nfrom src.Model.GameLogic import GameLogic\r\nfrom src.Controller.InputHandler import InputHandler\r\nfrom datetime import datetime\r\n\r\nclass GameController:\r\n    def __init__(self):\r\n        self.save_name = None\r\n        self.board = Gameboard()\r\n        self.game_logic = GameLogic()\r\n        self.player_list = []\r\n        self.broke_list = []\r\n        self.input_handler = InputHandler()\r\n\r\n    def get_player_list(self):\r\n        return self.player_list\r\n\r\n    def set_player_list(self, player_list):\r\n        self.player_list = player_list.copy()\r\n\r\n    def get_broke_player_list(self):\r\n        return self.broke_list\r\n\r\n    def set_broke_player_list(self, broke_list):\r\n        self.broke_list = broke_list.copy()\r\n\r\n    def get_current_round(self):\r\n        return self.game_logic.get_current_round()\r\n\r\n    def get__turn(self):\r\n        return self.game_logic.get_player_turn()\r\n\r\n    def set__turn(self, turn):\r\n        self.game_logic._player_turn = turn\r\n\r\n    def set_current_round(self, new_round):\r\n        self.game_logic.set_current_round(new_round)\r\n\r\n    def set_save_name(self, save_name):\r\n        self.save_name = save_name\r\n\r\n\r\n    def set_remove_last_round(self, remove_last_round):\r\n        self.game_logic.set_removed_last_round(remove_last_round)\r\n\r\n    \"\"\"By Kent: We need to program to detect the click events from the users. The click will call the functions for us. \"\"\"\r\n    def start_game(self):\r\n        self.initialize_players()\r\n        while not GameLogic.game_ends(self.game_logic,self.get_player_list()):\r\n            self.play_round()\r\n            self.game_logic.set_current_round(self.game_logic.get_current_round() + 1)\r\n\r\n    \"\"\" This function is called after the 'Play' button is clicked in the game \"\"\"\r\n    def button_play(self):\r\n        self.game_logic.set_player_turn(self.get_player_list())\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n       #TODO <show the roll dice button and display player_this_turn ONLY>\r\n        pass\r\n\r\n    def land_and_det_next_round(self,information,player_this_turn):\r\n        if self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"property\":\r\n            if information:  # This is when the property has no owner information is True this case\r\n                if self.board.tiles[player_this_turn.get_square() - 1].buy():  # TODO When the player have enough money\r\n                    # TODO <show the buy button> or show the not buy button\r\n                    pass\r\n                else:\r\n                    # TODO <Tell the player you cannot buy the property>\r\n                    pass\r\n                pass\r\n            # This case deals with the case where there is property owner\r\n            else:\r\n                # TODO <show the money is deducted>\r\n                pass\r\n        elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"jail\":\r\n            # TODO <show message 'JUST VISITING'>\r\n            pass\r\n        elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"go\":\r\n            # TODO <show message 'GO + money'>\r\n            pass\r\n        elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"go_to_jail\":\r\n            # TODO <show message \"Go to Jail\" animation, transport player to jail>\r\n            pass\r\n        elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"income_tax\":\r\n            # TODO <show message \"Income tax\", update the player money amount>\r\n            pass\r\n        elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == \"free_parking\":\r\n            # TODO <show message \"You are free-parking\">\r\n            pass\r\n\r\n        if GameLogic.player_broke(player_this_turn):\r\n            GameLogic.player_out(self.game_logic, player_this_turn, self.get_player_list(), self.get_broke_player_list())\r\n\r\n        self.game_logic.set_current_round(self.game_logic.get_current_round() + 1)  # Update the current round by +1\r\n        if GameLogic.game_ends(self.get_player_list(), self.game_logic.get_current_round()):  # When the game ends\r\n            GameLogic.display_winner(self.game_logic, self.get_player_list())\r\n        else:\r\n            self.game_logic.set_player_turn(self.get_player_list())\r\n            player_next_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n            #TODO <Display the player for next round>\r\n            if player_next_turn.get_jail_status():\r\n                if player_next_turn.get_fine_payed():\r\n                    pass\r\n                    # TODO <Display the roll only, do not display the pay fine button>\r\n                elif GameLogic.player_third_round(player_next_turn):\r\n                    #TODO <Display roll dice only>\r\n                    pass\r\n                else:\r\n                    pass\r\n                    # TODO <Display the pay fine button as well as the roll button>\r\n\r\n                # waiting the click event\r\n                pass\r\n            else:\r\n                # TODO <The button no need to change, display just Roll_dice>\r\n                # waiting the click event\r\n                pass\r\n\r\n    \"\"\"This function is called after pressing the 'Roll' button in the game window.\"\"\"\r\n    def roll_dice(self):\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        dice_roll1, dice_roll2 = GameLogic.roll_dice()\r\n        information = GameLogic.player_move(dice_roll1+dice_roll2,player_this_turn,self.board)\r\n        #TODO<Call function to display the animation in the view>\r\n        self.land_and_det_next_round(information,player_this_turn)\r\n\r\n    #Roll function for player in jail\r\n    def in_jail(self):\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        dice_roll1, dice_roll2 = GameLogic.roll_dice()\r\n        if GameLogic.same_double(dice_roll1,dice_roll2):\r\n            #TODO <on double, going out od jail>\r\n            information = GameLogic.player_move(dice_roll1 + dice_roll2, player_this_turn, self.board)\r\n            # TODO<Call function to display the animation in the view>\r\n            self.land_and_det_next_round(information,player_this_turn)\r\n        elif GameLogic.player_third_round(player_this_turn):\r\n            #TODO<show the pay fine button only\r\n            #move\r\n            pass\r\n        elif GameLogic.player_second_round(player_this_turn) and player_this_turn.get_fine_payed():\r\n            #move\r\n\r\n            pass\r\n\r\n    def pay_fine(self):\r\n        #pay_fine_logic\r\n        player_this_turn = self.get_player_list()[self.game_logic.get_player_turn()]\r\n        GameLogic.pay_fine(self.game_logic,player_this_turn)\r\n        #TODO <Show the money is deduced>\r\n        pass\r\n\r\n    def buy_button(self):\r\n        #function for buy\r\n        #TODO <show the property bought>\r\n        pass\r\n    \r\n    def no_buy_button(self):\r\n        #function to not_buy\r\n        #TODO <Show did not buy property>\r\n        pass\r\n        \r\n    \"\"\"By Kent: we don't need loop here. Instead we get a list from the view after the player clicks 'play'\"\"\"\r\n    def initialize_players(self):\r\n        num_players = self.input_handler.get_name_or_players(\"Enter the number of players (2-6): \")\r\n        for i in range(num_players):\r\n            player_name = self.input_handler.get_name_or_players(f\"Enter name for Player {i + 1}: \")\r\n            new_player = Player(player_name)\r\n            self.get_player_list().append(new_player)\r\n        print(\"Players initialized successfully.\\n\")\r\n\r\n    def end_game(self):\r\n        # Need to modify the logic in GameLogic endgame\r\n        pass\r\n\r\n    def save_game(self):\r\n        save_name = input(\"Enter the name of the saved game: \")\r\n\r\n        # gets current directory in which the program is running\r\n        save_directory = os.path.dirname(os.path.abspath(__file__))\r\n\r\n        # moves up and into the saves directory and normalizes the path\r\n        save_directory = os.path.normpath(os.path.join(save_directory, \"..\", \"..\", \"saves\"))\r\n\r\n        # ensures directory existence or creates\r\n        if not os.path.exists(save_directory):\r\n            os.makedirs(save_directory)\r\n            print(\"Save directory deleted or non existent --> Creating\")\r\n\r\n        save_instance = SavedGame(save_name, self)\r\n        game_data = save_instance.to_dictionary()\r\n        file_path = os.path.join(save_directory, f'{save_name}.json')\r\n        with open(file_path, 'w') as save_file:\r\n            json.dump(game_data, save_file, indent=4)\r\n            print(\"Game saved successfully.\\n\")\r\n\r\n    @staticmethod\r\n    def load_game(new_controller):\r\n        # gets current directory in which the program is running\r\n        save_directory = os.path.dirname(os.path.abspath(__file__))\r\n\r\n        # moves up and into the saves directory and normalizes the path\r\n        save_directory = os.path.normpath(os.path.join(save_directory, \"..\", \"..\", \"saves\"))\r\n\r\n        save_name = input(\"Enter the name of the save you want to load: \")\r\n        file_path = os.path.join(save_directory, f'{save_name}.json')\r\n\r\n        # parse save file into a dictionary and handles exceptions\r\n        try:\r\n            with open(file_path, 'r') as game_data:\r\n                game_data_dict = json.load(game_data)\r\n        except FileNotFoundError:\r\n            print(\"Game saved does not exist.\")\r\n            return\r\n        except json.JSONDecodeError:\r\n            print(\"Error in reading save file.\")\r\n            return\r\n\r\n        # pulls information from the dictionary into respective variables\r\n        new_controller.set_save_name(game_data_dict[\"save_name\"])\r\n        new_controller.set_current_round(game_data_dict[\"current_round\"])\r\n        new_controller.set__turn(game_data_dict[\"_turn\"])\r\n        new_controller.set_remove_last_round(game_data_dict[\"remove_last_round\"])\r\n\r\n        # gameboard_setup is a list of dictionaries, will cycle and update appropriately\r\n        gameboard_info = game_data_dict[\"gameboard_setup\"]\r\n        for tile_info, i in zip(gameboard_info, range(20)):\r\n            new_controller.board.tiles[i].update_name_pos_type(tile_info[\"name\"], tile_info[\"board_pos\"], tile_info[\"tile_type\"])\r\n            tile_type = tile_info[\"tile_type\"]\r\n            if tile_type == \"property\":\r\n                new_controller.board.tiles[i].update_values(tile_info[\"price\"], tile_info[\"rent\"], tile_info[\"owner\"], tile_info[\"color\"])\r\n            elif tile_type == \"income_tax\":\r\n                new_controller.board.tiles[i].update_values(tile_info[\"tax_percentage\"])\r\n            elif tile_type == \"jail\":\r\n                new_controller.board.tiles[i].update_values(tile_info[\"jailed_players\"])\r\n            elif tile_type == \"go\":\r\n                new_controller.board.tiles[i].update_values(tile_info[\"pass_prize\"])\r\n\r\n        # creates players objects and copies information from the dictionary\r\n        players = game_data_dict[\"players_list\"]\r\n        for p_data in players:\r\n            new_player = Player(\"\")\r\n            new_player.update_values(p_data[\"_username\"], p_data[\"_current_money\"], p_data[\"_jail_status\"], p_data[\"_fine_payed\"], p_data[\"_current_square\"], p_data[\"_in_jail_turns\"], p_data[\"_properties\"])\r\n            new_controller.players.append(new_player)\r\n\r\n        broke_players = game_data_dict[\"broke_list\"]\r\n        for p_data in broke_players:\r\n            new_player = Player(\"\")\r\n            new_player.update_values(p_data[\"_username\"], p_data[\"_current_money\"], p_data[\"_jail_status\"], p_data[\"_fine_payed\"], p_data[\"_current_square\"], p_data[\"_in_jail_turns\"], p_data[\"_properties\"])\r\n            new_controller.broke_players.append(new_player)\r\n\r\n# this class will copy the current game instance\r\nclass SavedGame:\r\n    def __init__(self, save_name, game_controller):\r\n        # Gets the name of the save and current round\r\n        self.save_name = save_name\r\n        self.save_time = datetime.now().strftime(\"%H:%M %d-%m-%Y\")\r\n        self._turn = game_controller.get__turn()\r\n        self.remove_last_round = game_controller.game_logic.get_remove_last_round()\r\n        self.current_round = game_controller.get_current_round()\r\n\r\n        # Saves the setup of the gameboard as a list\r\n        self.tiles = game_controller.board.tiles.copy()\r\n\r\n        # Saves players information\r\n        self.player_list = game_controller.get_player_list().copy()\r\n        self.broke_list = game_controller.get_broke_player_list().copy()\r\n\r\n    def to_dictionary(self):\r\n        # unpacks list of objects to a list of dictionary entries\r\n        gameboard_data = [tile.__dict__ for tile in self.tiles]\r\n        player_data = [player.__dict__ for player in self.player_list]\r\n        broke_player_data = [player.__dict__ for player in self.broke_list]\r\n\r\n        return {\r\n            \"save_name\": self.save_name,\r\n            \"save_time\": self.save_time,\r\n            \"_turn\": self._turn,\r\n            \"remove_last_round\": self.remove_last_round,\r\n            \"current_round\": self.current_round,\r\n            \"gameboard_setup\": gameboard_data,\r\n            \"players_list\": player_data,\r\n            \"broke_list\": broke_player_data\r\n        }\r\n\r\n    def get_save_name(self):\r\n        return self.save_name
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/GameController.py b/src/Controller/GameController.py
--- a/src/Controller/GameController.py	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/src/Controller/GameController.py	(date 1730802823912)
@@ -85,6 +85,7 @@
             pass
         elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == "go_to_jail":
             # TODO <show message "Go to Jail" animation, transport player to jail>
+            # go_to_jail.player_landed(player, JAIL TILE OBJECT) !!!
             pass
         elif self.board.tiles[player_this_turn.get_square() - 1].tile_type == "income_tax":
             # TODO <show message "Income tax", update the player money amount>
@@ -177,37 +178,36 @@
         # Need to modify the logic in GameLogic endgame
         pass
 
-    def save_game(self):
-        save_name = input("Enter the name of the saved game: ")
-
+    def save_game(self, save_name):
         # gets current directory in which the program is running
         save_directory = os.path.dirname(os.path.abspath(__file__))
 
         # moves up and into the saves directory and normalizes the path
         save_directory = os.path.normpath(os.path.join(save_directory, "..", "..", "saves"))
+        message1 = ""
 
         # ensures directory existence or creates
         if not os.path.exists(save_directory):
             os.makedirs(save_directory)
-            print("Save directory deleted or non existent --> Creating")
+            message1 = "Save directory deleted or non existent --> Creating"
 
         save_instance = SavedGame(save_name, self)
         game_data = save_instance.to_dictionary()
         file_path = os.path.join(save_directory, f'{save_name}.json')
         with open(file_path, 'w') as save_file:
             json.dump(game_data, save_file, indent=4)
-            print("Game saved successfully.\n")
+            message = "Game saved successfully.\n"
+        return f"{message1}\n{message}"
 
-    @staticmethod
-    def load_game(new_controller):
+
+    def load_game(self, load_name):
         # gets current directory in which the program is running
         save_directory = os.path.dirname(os.path.abspath(__file__))
 
         # moves up and into the saves directory and normalizes the path
         save_directory = os.path.normpath(os.path.join(save_directory, "..", "..", "saves"))
 
-        save_name = input("Enter the name of the save you want to load: ")
-        file_path = os.path.join(save_directory, f'{save_name}.json')
+        file_path = os.path.join(save_directory, f'{load_name}.json')
 
         # parse save file into a dictionary and handles exceptions
         try:
@@ -221,37 +221,37 @@
             return
 
         # pulls information from the dictionary into respective variables
-        new_controller.set_save_name(game_data_dict["save_name"])
-        new_controller.set_current_round(game_data_dict["current_round"])
-        new_controller.set__turn(game_data_dict["_turn"])
-        new_controller.set_remove_last_round(game_data_dict["remove_last_round"])
+        self.set_save_name(game_data_dict["save_name"])
+        self.set_current_round(game_data_dict["current_round"])
+        self.set__turn(game_data_dict["_turn"])
+        self.set_remove_last_round(game_data_dict["remove_last_round"])
 
         # gameboard_setup is a list of dictionaries, will cycle and update appropriately
         gameboard_info = game_data_dict["gameboard_setup"]
         for tile_info, i in zip(gameboard_info, range(20)):
-            new_controller.board.tiles[i].update_name_pos_type(tile_info["name"], tile_info["board_pos"], tile_info["tile_type"])
+            self.board.tiles[i].update_name_pos_type(tile_info["name"], tile_info["board_pos"], tile_info["tile_type"])
             tile_type = tile_info["tile_type"]
             if tile_type == "property":
-                new_controller.board.tiles[i].update_values(tile_info["price"], tile_info["rent"], tile_info["owner"], tile_info["color"])
+                self.board.tiles[i].update_values(tile_info["price"], tile_info["rent"], tile_info["owner"], tile_info["color"])
             elif tile_type == "income_tax":
-                new_controller.board.tiles[i].update_values(tile_info["tax_percentage"])
+                self.board.tiles[i].update_values(tile_info["tax_percentage"])
             elif tile_type == "jail":
-                new_controller.board.tiles[i].update_values(tile_info["jailed_players"])
+                self.board.tiles[i].update_values(tile_info["jailed_players"])
             elif tile_type == "go":
-                new_controller.board.tiles[i].update_values(tile_info["pass_prize"])
+                self.board.tiles[i].update_values(tile_info["pass_prize"])
 
         # creates players objects and copies information from the dictionary
         players = game_data_dict["players_list"]
         for p_data in players:
             new_player = Player("")
             new_player.update_values(p_data["_username"], p_data["_current_money"], p_data["_jail_status"], p_data["_fine_payed"], p_data["_current_square"], p_data["_in_jail_turns"], p_data["_properties"])
-            new_controller.players.append(new_player)
+            self.player_list.append(new_player)
 
         broke_players = game_data_dict["broke_list"]
         for p_data in broke_players:
             new_player = Player("")
             new_player.update_values(p_data["_username"], p_data["_current_money"], p_data["_jail_status"], p_data["_fine_payed"], p_data["_current_square"], p_data["_in_jail_turns"], p_data["_properties"])
-            new_controller.broke_players.append(new_player)
+            self.broke_list.append(new_player)
 
 # this class will copy the current game instance
 class SavedGame:
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32__Changes_.xml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]" date="1730194372821" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/10/2024 17:32 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,208 +0,0 @@
-Index: src/Model/Gameboard.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import random\r\n\r\n\r\nclass Tile:\r\n    \"\"\"Parent class for all tiles\"\"\"\r\n\r\n    def __init__(self, name, board_pos):\r\n        self.name = name\r\n        self.board_pos = int(board_pos)\r\n\r\n    def get_tile_position(self):\r\n        return self.board_pos\r\n\r\n    def set_tile_name(self, new_name):\r\n        self.name = new_name\r\n\r\n    \"\"\"Manages what happens to a player that lands on the tile\"\"\"\r\n    # noinspection PyStatementEffect\r\n    \"\"\"\r\n           By Kent: This should be a class method. I have modified it, since I want to use dynamic binding here\r\n           to decrease the complexity of the game logic. Every class will have a player_landed\r\n        \"\"\"\r\n    @classmethod\r\n    def player_landed(cls, player):\r\n        pass\r\n\r\n\r\nclass Property(Tile):\r\n    \"\"\"  Property has the following attributes\r\n    All attributes have to be passed when initialized \"\"\"\r\n\r\n    def __init__(self, name, board_pos, price, rent, owner, color):\r\n        super().__init__(name, board_pos)\r\n        self.price = price\r\n        self.rent = rent\r\n        self.owner = owner\r\n        self.__color = color\r\n\r\n    def get_property_name(self):\r\n        return self.name\r\n\r\n    def get_rent(self):\r\n        return self.rent\r\n\r\n    def set_rent(self, new_rent):\r\n        self.rent = new_rent\r\n\r\n    def get_price(self):\r\n        return self.price\r\n\r\n    def set_price(self, new_price):\r\n        self.price = new_price\r\n\r\n    def get_owner(self):\r\n        return self.owner\r\n\r\n    def set_owner(self, new_owner):\r\n        self.owner = new_owner\r\n\r\n    def buy(self, player):\r\n        \"\"\" if property has no owner can be bought, then checks player balance\r\n            if enough: removes money, adds property to player, sets property new owner\r\n            returns 0 for not enough money, 1 for success \"\"\"\r\n        if player.get_current_money() >= self.price:\r\n            player.remove_money(self.price)\r\n            player.add_properties(self)\r\n            self.set_owner(player)\r\n            print(f\"{player.getname()} bought {self.name} for {self.get_price()} HKD\")\r\n            return True\r\n        else:\r\n            print(f\"{player.getname()}'s balance is not enough to buy {self.name}\")\r\n            return False\r\n\r\n    def pay_rent(self, player):\r\n        rent_amount = self.get_rent()   # gets rent value\r\n        if player.get_current_money() < rent_amount:    # checks if player has enough money to pay\r\n            rent_amount = player.get_current_money()  # if not gets all the player can give\r\n        player.remove_money(self.get_rent())    # removes from the player total what is owed\r\n        self.owner.add_money(rent_amount)  # all money available is added to the owner\r\n        print(f\"{player.getname()} payed {rent_amount} HKD to {self.owner.getname()}\")\r\n        return player.get_current_money()   # current player amount is returned (only for testing)\r\n\r\n    def player_landed(self, player):\r\n        \"\"\"provides option to the player\"\"\"\r\n        if self.owner is None:\r\n            message = f\"{self.name} is available for purchase. Listed at {self.get_price()} HKD\"\r\n            \"\"\"TODO GET INPUT FROM PLAYER if INPUT == BUY TILE: self.buy(player)\"\"\"\r\n        else:\r\n            message = f\"{self.name} is owned by {self.get_owner()}. {player.getname()} owes {self.get_price()} HKD\"\r\n            self.pay_rent(player)\r\n        return message\r\n\r\n\r\nclass Jail(Tile):\r\n    \"\"\"Initialize the empty array of jailed players\"\"\"\r\n    def __init__(self, board_pos, jailed_players):\r\n        super().__init__(\"Jail\", board_pos)\r\n        self.jailed_players = jailed_players\r\n\r\n    def set_jailed_players(self, jailed_players):\r\n        self.jailed_players = jailed_players.copy()\r\n\r\n    def get_jailed_players(self):\r\n        return self.jailed_players\r\n\r\n    def free_player(self, player):\r\n        self.jailed_players.remove(player)\r\n        print(f\"{player.getname()} is freed from Jail\")\r\n\r\n    def player_landed(self, player):\r\n        pass\r\n\r\n\r\n# initialized here in order to be hardcoded into go to jail tile\r\nJailTile = Jail(5, [])\r\n\r\n\r\nclass Go(Tile):\r\n    \"\"\"Initialize the prize for passing amount\"\"\"\r\n    def __init__(self, prize):\r\n        super().__init__(\"Go\", 0)\r\n        self.pass_prize = prize\r\n\r\n    def get_pass_prize(self):\r\n        return self.pass_prize\r\n\r\n    def set_pass_prize(self, new_prize):\r\n        self.pass_prize = new_prize\r\n\r\n    \"\"\"When called adds pass_prize to the player balance\"\"\"\r\n    def player_landed(self, player):\r\n        player.add_money(self.get_pass_prize())\r\n\r\n\r\nclass GoToJail(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Go To Jail\", board_pos)\r\n\r\n    @staticmethod\r\n    def arrest_player(player):\r\n        player.is_jailed(True)\r\n        player.set_in_jail_turns(3)     # sets max turns to spend in jail\r\n        player.set_current_square(JailTile.get_tile_position())    # the player position is updated to the jail position\r\n        JailTile.jailed_players.append(player)      # puts the player name in the jail list of detainees\r\n        print(f\"{player.getname()} has been locked up\")\r\n\r\n    def player_landed(self, player):\r\n        return self.arrest_player(player)\r\n\r\n\r\nclass Chance(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Chance\", board_pos)\r\n\r\n    def player_landed(self, player):\r\n        good_chance = int(random.random() * 2)\r\n        if good_chance:\r\n            amount = int(random.random() * 21) * 10\r\n            player.add_money(amount)\r\n        else:\r\n            amount = int(random.random() * 31) * 10\r\n            player.remove_money(amount)\r\n\r\n\r\nclass IncomeTax(Tile):\r\n    def __init__(self, board_pos, new_tax_percentage):\r\n        super().__init__(\"IncomeTax\", board_pos)\r\n        self.tax_percentage = new_tax_percentage\r\n\r\n    def set_income_tax(self, new_tax):\r\n        self.tax_percentage = new_tax\r\n\r\n    @staticmethod\r\n    def calculate_tax(player):\r\n        return int(player.get_current_money() / 100) * 10   # 10% ROUNDED DOWN TO NEAREST 10x\r\n\r\n    def player_landed(self, player):\r\n        tax_amount = self.calculate_tax(player)\r\n        player.remove_money(tax_amount)\r\n\r\n\r\nclass FreeParking(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Free Parking\", board_pos)\r\n\r\n    def player_landed(self, player):\r\n        pass\r\n\r\n\r\nclass Gameboard:\r\n    def __init__(self):\r\n        self.tiles = [Go(1500),\r\n                      Property(\"Central\", 1, 800, 90, None, \"Blue\"),\r\n                      Property(\"Wan Chai\", 2, 700, 65, None, \"Blue\"),\r\n                      IncomeTax(3, 10),\r\n                      Property(\"Stanley\", 4, 600, 60, None, \"Blue\"),\r\n                      JailTile,     # initialized globally after Jail to be used in goToJail\r\n                      Property(\"Shek-O\", 6, 400, 10, None, \"Red\"),\r\n                      Property(\"Mong Kok\", 7, 500, 40, None, \"Red\"),\r\n                      Chance(8),\r\n                      Property(\"Tsing Yi\", 9, 400, 15, None, \"Red\"),\r\n                      FreeParking(10),\r\n                      Property(\"Shatin\", 11, 700, 75, None, \"Green\"),\r\n                      Chance(12),\r\n                      Property(\"Tuen Mun\", 13, 400, 20, None, \"Green\"),\r\n                      Property(\"Tai Po\", 14, 500, 25, None, \"Green\"),\r\n                      GoToJail(15),\r\n                      Property(\"Sai Kung\", 16, 400, 10, None, \"Yellow\"),\r\n                      Property(\"Yuen Long\", 17, 400, 25, None, \"Yellow\"),\r\n                      Chance(18),\r\n                      Property(\"Tai O\", 19, 600, 25, None, \"Yellow\")\r\n                      ]     # Stores different Tile Objects. Can be customized by the user\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Model/Gameboard.py b/src/Model/Gameboard.py
---- a/src/Model/Gameboard.py	(revision 613eae963c18d01857c9224b55fcf7ad36120acd)
-+++ b/src/Model/Gameboard.py	(date 1730127600570)
-@@ -163,16 +163,15 @@
- 
- 
- class IncomeTax(Tile):
--    def __init__(self, board_pos, new_tax_percentage):
-+    def __init__(self, board_pos, new_tax):
-         super().__init__("IncomeTax", board_pos)
--        self.tax_percentage = new_tax_percentage
-+        self.tax_percentage = new_tax
- 
-     def set_income_tax(self, new_tax):
-         self.tax_percentage = new_tax
- 
--    @staticmethod
--    def calculate_tax(player):
--        return int(player.get_current_money() / 100) * 10   # 10% ROUNDED DOWN TO NEAREST 10x
-+    def calculate_tax(self, player):
-+        return int(player.get_current_money() / 100) * self.tax_percentage  # tax_percentage ROUNDED DOWN TO NEAREST 10x
- 
-     def player_landed(self, player):
-         tax_amount = self.calculate_tax(player)
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"C:\\Users\\tommy\\miniconda3\" project-jdk-type=\"Python SDK\" />\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 613eae963c18d01857c9224b55fcf7ad36120acd)
-+++ b/.idea/misc.xml	(date 1730127568843)
-@@ -1,4 +1,7 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="Black">
-+    <option name="sdkName" value="C:\Users\tommy\miniconda3" />
-+  </component>
-   <component name="ProjectRootManager" version="2" project-jdk-name="C:\Users\tommy\miniconda3" project-jdk-type="Python SDK" />
- </project>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nZNqtspflyRZqXPpP505un74XG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/PolyU/PolyU Year 3/COMP3211 Software Engineering/Project Github&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Python tests.Python tests in tests\">\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_Gameboard.TestJail\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_Gameboard.TestJail&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_Gameboard.TestJail.test_set_jailed_players\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_Gameboard.TestJail.test_set_jailed_players&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_Gameboard.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_Gameboard.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in tests\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.Python tests in tests\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_Gameboard.py\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_Gameboard.TestJail.test_set_jailed_players\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_Gameboard.TestJail\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\r\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729176831318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729176831318</updated>\r\n      <workItem from=\"1729176832503\" duration=\"5256000\" />\r\n      <workItem from=\"1729205014409\" duration=\"9100000\" />\r\n      <workItem from=\"1729216750621\" duration=\"322000\" />\r\n      <workItem from=\"1729217094305\" duration=\"939000\" />\r\n      <workItem from=\"1729258610543\" duration=\"706000\" />\r\n      <workItem from=\"1729259351895\" duration=\"10538000\" />\r\n      <workItem from=\"1729515491755\" duration=\"234000\" />\r\n      <workItem from=\"1729661586409\" duration=\"244000\" />\r\n      <workItem from=\"1729934612284\" duration=\"1836000\" />\r\n      <workItem from=\"1730004190962\" duration=\"1095000\" />\r\n      <workItem from=\"1730024143686\" duration=\"7972000\" />\r\n      <workItem from=\"1730109912025\" duration=\"33000\" />\r\n      <workItem from=\"1730110856482\" duration=\"230000\" />\r\n      <workItem from=\"1730111961934\" duration=\"1279000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"gameboard functions\">\r\n      <created>1729259402457</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259402457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1729259636382</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259636382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Classes V1 created&#10;standard Gameboard initialized and objects created\">\r\n      <created>1729273012131</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729273012131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Updated gameboard and player functions to NEW US8\">\r\n      <created>1729936455309</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729936455309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006659690</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006659690</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006706523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006706523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\">\r\n      <created>1730032008562</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032008562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Touch Ups on Gameboard.py v5\">\r\n      <created>1730113203511</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730113203511</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"gameboard functions\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Classes V1 created&#10;standard Gameboard initialized and objects created\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v2\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\" />\r\n    <MESSAGE value=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Touch Ups on Gameboard.py v5\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"tests\">\r\n        <watch expression=\"player1.get_current_money()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()+player1.get_current_money()\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730112685518\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 613eae963c18d01857c9224b55fcf7ad36120acd)
-+++ b/.idea/workspace.xml	(date 1730190556127)
-@@ -4,7 +4,11 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5" />
-+    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5">
-+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/Model/Gameboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Gameboard.py" afterDir="false" />
-+    </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -13,6 +17,18 @@
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-+  <component name="GitHubPullRequestSearchHistory">{
-+  &quot;lastFilter&quot;: {
-+    &quot;state&quot;: &quot;OPEN&quot;,
-+    &quot;assignee&quot;: &quot;CLEM-9&quot;
-+  }
-+}</component>
-+  <component name="GithubPullRequestsUISettings">{
-+  &quot;selectedUrlAndAccountId&quot;: {
-+    &quot;url&quot;: &quot;https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git&quot;,
-+    &quot;accountId&quot;: &quot;358c0e21-a4ef-4bac-aa60-9c8cdc9c591a&quot;
-+  }
-+}</component>
-   <component name="MarkdownSettingsMigration">
-     <option name="stateVersion" value="1" />
-   </component>
-@@ -30,24 +46,26 @@
-   </component>
-   <component name="PropertiesComponent">{
-   &quot;keyToString&quot;: {
-+    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
-     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-     &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,
-     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
--    &quot;last_opened_file_path&quot;: &quot;D:/PolyU/PolyU Year 3/COMP3211 Software Engineering/Project Github&quot;,
-+    &quot;last_opened_file_path&quot;: &quot;C:/Users/tommy/Documents/INGEGNERIA/3.1 () Database Systems/Group Project&quot;,
-     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
--    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
-+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-   }
- }</component>
-   <component name="RunManager" selected="Python tests.Python tests in tests">
-     <configuration name="Python tests for test_GameLogic.TestGameLogic" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-       <module name="Source Code" />
-+      <option name="ENV_FILES" value="" />
-       <option name="INTERPRETER_OPTIONS" value="" />
-       <option name="PARENT_ENVS" value="true" />
-       <option name="SDK_HOME" value="" />
-@@ -63,6 +81,7 @@
-     </configuration>
-     <configuration name="Python tests for test_Gameboard.TestJail" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-       <module name="Source Code" />
-+      <option name="ENV_FILES" value="" />
-       <option name="INTERPRETER_OPTIONS" value="" />
-       <option name="PARENT_ENVS" value="true" />
-       <option name="SDK_HOME" value="" />
-@@ -78,6 +97,7 @@
-     </configuration>
-     <configuration name="Python tests for test_Gameboard.TestJail.test_set_jailed_players" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-       <module name="Source Code" />
-+      <option name="ENV_FILES" value="" />
-       <option name="INTERPRETER_OPTIONS" value="" />
-       <option name="PARENT_ENVS" value="true" />
-       <option name="SDK_HOME" value="" />
-@@ -93,6 +113,7 @@
-     </configuration>
-     <configuration name="Python tests in test_Gameboard.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-       <module name="Source Code" />
-+      <option name="ENV_FILES" value="" />
-       <option name="INTERPRETER_OPTIONS" value="" />
-       <option name="PARENT_ENVS" value="true" />
-       <option name="SDK_HOME" value="" />
-@@ -108,6 +129,7 @@
-     </configuration>
-     <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
-       <module name="Source Code" />
-+      <option name="ENV_FILES" value="" />
-       <option name="INTERPRETER_OPTIONS" value="" />
-       <option name="PARENT_ENVS" value="true" />
-       <option name="SDK_HOME" value="" />
-@@ -134,8 +156,8 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153" />
--        <option value="bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153" />
-+        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.23726.102" />
-+        <option value="bundled-python-sdk-5e1850174b45-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23726.102" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -160,7 +182,10 @@
-       <workItem from="1730024143686" duration="7972000" />
-       <workItem from="1730109912025" duration="33000" />
-       <workItem from="1730110856482" duration="230000" />
--      <workItem from="1730111961934" duration="1279000" />
-+      <workItem from="1730111961934" duration="2655000" />
-+      <workItem from="1730127041689" duration="620000" />
-+      <workItem from="1730176914627" duration="1373000" />
-+      <workItem from="1730190169111" duration="384000" />
-     </task>
-     <task id="LOCAL-00001" summary="gameboard functions">
-       <created>1729259402457</created>
-@@ -218,7 +243,21 @@
-       <option name="project" value="LOCAL" />
-       <updated>1730113203511</updated>
-     </task>
--    <option name="localTasksCounter" value="9" />
-+    <task id="LOCAL-00009" summary="Touch Ups on Gameboard.py v5">
-+      <created>1730113292780</created>
-+      <option name="number" value="00009" />
-+      <option name="presentableId" value="LOCAL-00009" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730113292780</updated>
-+    </task>
-+    <task id="LOCAL-00010" summary="Touch Ups on Gameboard.py v5">
-+      <created>1730113354982</created>
-+      <option name="number" value="00010" />
-+      <option name="presentableId" value="LOCAL-00010" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730113354982</updated>
-+    </task>
-+    <option name="localTasksCounter" value="11" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -279,6 +318,6 @@
-     </watches-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730112685518" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-+    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730127647296" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29__Changes_.xml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]" date="1730190625295" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/10/2024 16:29 [Changes]" />
-</changelist>
\ No newline at end of file
Index: saves/LOAD_TEST.json
===================================================================
diff --git a/saves/LOAD_TEST.json b/saves/LOAD_TEST.json
deleted file mode 100644
--- a/saves/LOAD_TEST.json	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,52 +0,0 @@
-{
-    "save_name": "LOAD_TEST",
-    "save_time": "17:41 05-11-2024",
-    "_turn": -1,
-    "remove_last_round": false,
-    "current_round": 1,
-    "gameboard_setup": [
-        {
-            "name": "Go",
-            "board_pos": 0,
-            "tile_type": "go",
-            "pass_prize": 1500
-        },
-        {
-            "name": "Central",
-            "board_pos": 1,
-            "tile_type": "property",
-            "price": 800,
-            "rent": 90,
-            "owner": null,
-            "color": "Blue"
-        },
-        {
-            "name": "Wan Chai",
-            "board_pos": 2,
-            "tile_type": "property",
-            "price": 700,
-            "rent": 65,
-            "owner": null,
-            "color": "Blue"
-        },
-        {
-            "name": "IncomeTax",
-            "board_pos": 3,
-            "tile_type": "income_tax",
-            "tax_percentage": 10
-        },
-        {
-            "name": "Stanley",
-            "board_pos": 4,
-            "tile_type": "property",
-            "price": 600,
-            "rent": 60,
-            "owner": null,
-            "color": "Blue"
-        },
-        {
-            "name": "Jail",
-            "board_pos": 5,
-            "tile_type": "jail",
-            "jailed_players": [
-                
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47__Changes_.xml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]" date="1730191690944" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/10/2024 16:47 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,102 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"Touch Ups on Gameboard.py v5\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/Source Code.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/Source Code.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/.idea/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/.idea/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/.idea/src.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/.idea/src.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/GameController.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/GameController.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameLogic.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameLogic.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Gameboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Gameboard.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/InputHandler.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/InputHandler.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Player.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Player.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/Display.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/Display.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/UI.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/UI.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/tests/test_GameLogic.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/tests/test_GameLogic.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/tests/test_Gameboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/tests/test_Gameboard.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nZNqtspflyRZqXPpP505un74XG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor&quot;: &quot;Run&quot;,\n    &quot;Python tests.Python tests for test_Gameboard.TestProperty.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;D:/PolyU/PolyU Year 3/COMP3211 Software Engineering/Project Github&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\PolyU\\PolyU Year 3\\COMP3211 Software Engineering\\Project Github\\src\\Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python tests.Python tests for test_GameLogic.TestGameLogic\">\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic.test_player_out\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic.test_player_out&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_Gameboard.TestProperty\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_Gameboard.TestProperty&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_Gameboard.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_Gameboard.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in tests\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_Gameboard.TestProperty\" />\r\n        <item itemvalue=\"Python tests.Python tests in tests\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_Gameboard.py\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\r\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729176831318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729176831318</updated>\r\n      <workItem from=\"1729176832503\" duration=\"5256000\" />\r\n      <workItem from=\"1729205014409\" duration=\"9100000\" />\r\n      <workItem from=\"1729216750621\" duration=\"322000\" />\r\n      <workItem from=\"1729217094305\" duration=\"939000\" />\r\n      <workItem from=\"1729258610543\" duration=\"706000\" />\r\n      <workItem from=\"1729259351895\" duration=\"10538000\" />\r\n      <workItem from=\"1729515491755\" duration=\"234000\" />\r\n      <workItem from=\"1729661586409\" duration=\"244000\" />\r\n      <workItem from=\"1729934612284\" duration=\"1836000\" />\r\n      <workItem from=\"1730004190962\" duration=\"1095000\" />\r\n      <workItem from=\"1730024143686\" duration=\"7972000\" />\r\n      <workItem from=\"1730109912025\" duration=\"33000\" />\r\n      <workItem from=\"1730110856482\" duration=\"230000\" />\r\n      <workItem from=\"1730111961934\" duration=\"1279000\" />\r\n      <workItem from=\"1730120246622\" duration=\"12973000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"gameboard functions\">\r\n      <created>1729259402457</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259402457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1729259636382</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259636382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Classes V1 created&#10;standard Gameboard initialized and objects created\">\r\n      <created>1729273012131</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729273012131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Updated gameboard and player functions to NEW US8\">\r\n      <created>1729936455309</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729936455309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006659690</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006659690</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006706523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006706523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\">\r\n      <created>1730032008562</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032008562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Touch Ups on Gameboard.py v5\">\r\n      <created>1730113203511</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730113203511</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"gameboard functions\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Classes V1 created&#10;standard Gameboard initialized and objects created\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v2\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\" />\r\n    <MESSAGE value=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Touch Ups on Gameboard.py v5\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/tests/test_GameLogic.py</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"tests\">\r\n        <watch expression=\"player1.get_current_money()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()+player1.get_current_money()\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730136028047\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 4c4e357e5516e2570caa760f6d4483b37f8a8b79)
-+++ b/.idea/workspace.xml	(date 1730191644435)
-@@ -4,27 +4,8 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5">
--      <change beforePath="$PROJECT_DIR$/.idea/Source Code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Source Code.iml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-+    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameblogic">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/.idea/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/.idea/.gitignore" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/.idea/modules.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/.idea/src.iml" beforeDir="false" afterPath="$PROJECT_DIR$/src/.idea/src.iml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/.idea/vcs.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Controller/GameController.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/GameController.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Model/GameLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameLogic.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Model/Gameboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Gameboard.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Model/InputHandler.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/InputHandler.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Model/Player.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Player.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/View/Display.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/Display.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/View/UI.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/UI.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/tests/test_GameLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/test_GameLogic.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/tests/test_Gameboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/test_Gameboard.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -41,6 +22,18 @@
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-+  "lastFilter": {
-+    "state": "OPEN",
-+    "assignee": "Yutatsu-KMC"
-+  }
-+}]]></component>
-+  <component name="GithubPullRequestsUISettings"><![CDATA[{
-+  "selectedUrlAndAccountId": {
-+    "url": "https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git",
-+    "accountId": "7275c221-0702-42d6-abcb-979f6509acc0"
-+  }
-+}]]></component>
-   <component name="MarkdownSettingsMigration">
-     <option name="stateVersion" value="1" />
-   </component>
-@@ -203,6 +196,7 @@
-       <workItem from="1730110856482" duration="230000" />
-       <workItem from="1730111961934" duration="1279000" />
-       <workItem from="1730120246622" duration="12973000" />
-+      <workItem from="1730190404704" duration="1226000" />
-     </task>
-     <task id="LOCAL-00001" summary="gameboard functions">
-       <created>1729259402457</created>
-@@ -260,7 +254,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1730113203511</updated>
-     </task>
--    <option name="localTasksCounter" value="9" />
-+    <task id="LOCAL-00009" summary="Touch Ups on Gameblogic">
-+      <option name="closed" value="true" />
-+      <created>1730190476253</created>
-+      <option name="number" value="00009" />
-+      <option name="presentableId" value="LOCAL-00009" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730190476253</updated>
-+    </task>
-+    <option name="localTasksCounter" value="10" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -300,7 +302,8 @@
-     <MESSAGE value="Updated gameboard and player functions to NEW US8 v2" />
-     <MESSAGE value="Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py" />
-     <MESSAGE value="Touch Ups on Gameboard.py v5" />
--    <option name="LAST_COMMIT_MESSAGE" value="Touch Ups on Gameboard.py v5" />
-+    <MESSAGE value="Touch Ups on Gameblogic" />
-+    <option name="LAST_COMMIT_MESSAGE" value="Touch Ups on Gameblogic" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
-@@ -326,6 +329,6 @@
-     </watches-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730136028047" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-+    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730191256871" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ /dev/null	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
@@ -1,71 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"Touch Ups on Gameboard.py v5\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Gameboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Gameboard.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/tests/test_GameLogic.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/tests/test_GameLogic.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nZNqtspflyRZqXPpP505un74XG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Python tests.Python tests for test_GameLogic.TestGameLogic.executor\": \"Run\",\n    \"Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor\": \"Run\",\n    \"Python tests.Python tests for test_Gameboard.TestProperty.executor\": \"Run\",\n    \"Python tests.Python tests in tests.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"TODO_SCOPE\": \"All Places\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"git-widget-placeholder\": \"main\",\n    \"last_opened_file_path\": \"D:/PolyU/PolyU Year 3/COMP3211 Software Engineering/Project Github\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\PolyU\\PolyU Year 3\\COMP3211 Software Engineering\\Project Github\\src\\Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python tests.Python tests in tests\">\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic.test_player_out\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic.test_player_out&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_Gameboard.TestProperty\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_Gameboard.TestProperty&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in test_Gameboard.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests/test_Gameboard.py&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in tests\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/tests&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.Python tests in tests\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_Gameboard.TestProperty\" />\r\n        <item itemvalue=\"Python tests.Python tests in test_Gameboard.py\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\r\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729176831318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729176831318</updated>\r\n      <workItem from=\"1729176832503\" duration=\"5256000\" />\r\n      <workItem from=\"1729205014409\" duration=\"9100000\" />\r\n      <workItem from=\"1729216750621\" duration=\"322000\" />\r\n      <workItem from=\"1729217094305\" duration=\"939000\" />\r\n      <workItem from=\"1729258610543\" duration=\"706000\" />\r\n      <workItem from=\"1729259351895\" duration=\"10538000\" />\r\n      <workItem from=\"1729515491755\" duration=\"234000\" />\r\n      <workItem from=\"1729661586409\" duration=\"244000\" />\r\n      <workItem from=\"1729934612284\" duration=\"1836000\" />\r\n      <workItem from=\"1730004190962\" duration=\"1095000\" />\r\n      <workItem from=\"1730024143686\" duration=\"7972000\" />\r\n      <workItem from=\"1730109912025\" duration=\"33000\" />\r\n      <workItem from=\"1730110856482\" duration=\"230000\" />\r\n      <workItem from=\"1730111961934\" duration=\"1279000\" />\r\n      <workItem from=\"1730120246622\" duration=\"12973000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"gameboard functions\">\r\n      <created>1729259402457</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259402457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1729259636382</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259636382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Classes V1 created&#10;standard Gameboard initialized and objects created\">\r\n      <created>1729273012131</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729273012131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Updated gameboard and player functions to NEW US8\">\r\n      <created>1729936455309</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729936455309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006659690</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006659690</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006706523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006706523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\">\r\n      <created>1730032008562</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032008562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Touch Ups on Gameboard.py v5\">\r\n      <created>1730113203511</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730113203511</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"gameboard functions\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Classes V1 created&#10;standard Gameboard initialized and objects created\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v2\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\" />\r\n    <MESSAGE value=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Touch Ups on Gameboard.py v5\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/tests/test_GameLogic.py</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"tests\">\r\n        <watch expression=\"player1.get_current_money()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()+player1.get_current_money()\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730191432916\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision afd06f1c8578ffbb36484a0c2e5260a6fb8a0f0f)
-+++ b/.idea/workspace.xml	(date 1730194358502)
-@@ -4,11 +4,8 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5">
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+    <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="fixed gameLogic Test">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/Model/Gameboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Gameboard.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/tests/test_GameLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/test_GameLogic.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -245,7 +242,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1730113203511</updated>
-     </task>
--    <option name="localTasksCounter" value="9" />
-+    <task id="LOCAL-00009" summary="fixed gameLogic Test">
-+      <option name="closed" value="true" />
-+      <created>1730191619025</created>
-+      <option name="number" value="00009" />
-+      <option name="presentableId" value="LOCAL-00009" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730191619025</updated>
-+    </task>
-+    <option name="localTasksCounter" value="10" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -285,7 +290,8 @@
-     <MESSAGE value="Updated gameboard and player functions to NEW US8 v2" />
-     <MESSAGE value="Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py" />
-     <MESSAGE value="Touch Ups on Gameboard.py v5" />
--    <option name="LAST_COMMIT_MESSAGE" value="Touch Ups on Gameboard.py v5" />
-+    <MESSAGE value="fixed gameLogic Test" />
-+    <option name="LAST_COMMIT_MESSAGE" value="fixed gameLogic Test" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
-@@ -294,11 +300,6 @@
-           <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>
-           <line>33</line>
-           <option name="timeStamp" value="1" />
--        </line-breakpoint>
--        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
--          <url>file://$PROJECT_DIR$/tests/test_GameLogic.py</url>
--          <line>12</line>
--          <option name="timeStamp" value="3" />
-         </line-breakpoint>
-       </breakpoints>
-     </breakpoint-manager>
-@@ -311,6 +312,6 @@
-     </watches-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730191432916" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-+    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730191582609" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.12 (pythonProject) (2)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.12\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/.idea/misc.xml	(date 1730799885508)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.12 (pythonProject) (2)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="C:\Users\tommy\miniconda3" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/Source Code.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.12\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Source Code.iml b/.idea/Source Code.iml
--- a/.idea/Source Code.iml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/.idea/Source Code.iml	(date 1730799885520)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.12" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"Touch Ups on Gameboard.py v5\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/DisplayManager.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/DisplayManager.py\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"b53ad74c-d01b-4e52-9a34-f524bfab6613\" name=\"Changes by Kent Max Chandra\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;PhDinTimeManagement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git&quot;,\r\n    &quot;accountId&quot;: &quot;92e91e34-3118-423c-bd88-520f2a36a0e6&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nZNqtspflyRZqXPpP505un74XG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.executor&quot;: &quot;Coverage&quot;,\r\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner.executor&quot;: &quot;Coverage&quot;,\r\n    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python tests.Python tests for test_Gameboard.TestProperty.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.GUI.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.gui.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.new.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Programming Projects/The-Monopoly-Game-Project.1&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"PyCoverageOptionsProvider\">\r\n    <option name=\"myUseBundledCoveragePy\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Hp\\Desktop\\The-Monopoly-Game-Project\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/assets/dice\" />\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n      <recent name=\"$PROJECT_DIR$/src/View\" />\r\n      <recent name=\"D:\\PolyU\\PolyU Year 3\\COMP3211 Software Engineering\\Project Github\\src\\Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.GUI\">\r\n    <configuration name=\"GUI\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src/View\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/View/GUI.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic.test_display_winner\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic.test_display_winner&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_GameLogic.TestGameLogic.test_player_out\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Source Code\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_GameLogic.TestGameLogic.test_player_out&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.GUI\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153\" />\r\n        <option value=\"bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e63f52e8-b5e2-4b82-8eb0-ddb8c465611b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729176831318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729176831318</updated>\r\n      <workItem from=\"1729176832503\" duration=\"5256000\" />\r\n      <workItem from=\"1729205014409\" duration=\"9100000\" />\r\n      <workItem from=\"1729216750621\" duration=\"322000\" />\r\n      <workItem from=\"1729217094305\" duration=\"939000\" />\r\n      <workItem from=\"1729258610543\" duration=\"706000\" />\r\n      <workItem from=\"1729259351895\" duration=\"10538000\" />\r\n      <workItem from=\"1729515491755\" duration=\"234000\" />\r\n      <workItem from=\"1729661586409\" duration=\"244000\" />\r\n      <workItem from=\"1729934612284\" duration=\"1836000\" />\r\n      <workItem from=\"1730004190962\" duration=\"1095000\" />\r\n      <workItem from=\"1730024143686\" duration=\"7972000\" />\r\n      <workItem from=\"1730109912025\" duration=\"33000\" />\r\n      <workItem from=\"1730110856482\" duration=\"230000\" />\r\n      <workItem from=\"1730111961934\" duration=\"1279000\" />\r\n      <workItem from=\"1730120246622\" duration=\"12973000\" />\r\n      <workItem from=\"1730199675463\" duration=\"26000\" />\r\n      <workItem from=\"1730208733155\" duration=\"322000\" />\r\n      <workItem from=\"1730278497914\" duration=\"318000\" />\r\n      <workItem from=\"1730278822997\" duration=\"15714000\" />\r\n      <workItem from=\"1730367503069\" duration=\"612000\" />\r\n      <workItem from=\"1730377042614\" duration=\"1385000\" />\r\n      <workItem from=\"1730743920545\" duration=\"780000\" />\r\n      <workItem from=\"1730767053814\" duration=\"1079000\" />\r\n      <workItem from=\"1730770731790\" duration=\"7588000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"gameboard functions\">\r\n      <created>1729259402457</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259402457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1729259636382</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259636382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Classes V1 created&#10;standard Gameboard initialized and objects created\">\r\n      <created>1729273012131</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729273012131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Updated gameboard and player functions to NEW US8\">\r\n      <created>1729936455309</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729936455309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006659690</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006659690</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Updated gameboard and player functions to NEW US8 v2\">\r\n      <created>1730006706523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730006706523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\">\r\n      <created>1730032008562</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730032008562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Touch Ups on Gameboard.py v5\">\r\n      <created>1730113203511</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730113203511</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"gameboard functions\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Classes V1 created&#10;standard Gameboard initialized and objects created\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v2\" />\r\n    <MESSAGE value=\"Updated gameboard and player functions to NEW US8 v3&#10;&#10;Added Unit tests to Gameboard.py\" />\r\n    <MESSAGE value=\"Touch Ups on Gameboard.py v5\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Touch Ups on Gameboard.py v5\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Source Code/Source Code/Model/Gameboard.py</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"tests\">\r\n        <watch expression=\"player1.get_current_money()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()\" language=\"Python\" />\r\n        <watch expression=\"wan_chai.get_rent()+player1.get_current_money()\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Game_py$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1730198824506\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/tests\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$GUI.coverage\" NAME=\"GUI Coverage Results\" MODIFIED=\"1730792517292\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$Test.coverage\" NAME=\"Test Coverage Results\" MODIFIED=\"1730432574768\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$gui.coverage\" NAME=\"gui Coverage Results\" MODIFIED=\"1730294710638\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n    <SUITE FILE_PATH=\"coverage/Game_py$new.coverage\" NAME=\"new Coverage Results\" MODIFIED=\"1730338734766\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src/View\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/.idea/workspace.xml	(date 1730803091480)
@@ -5,8 +5,20 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e63f52e8-b5e2-4b82-8eb0-ddb8c465611b" name="Changes" comment="Touch Ups on Gameboard.py v5">
+      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/Source Code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Source Code.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_29__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_16_47__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_10_2024_17_32__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/DisplayManager.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/DisplayManager.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/saves/LOAD_TEST.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/GameController.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/GameController.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/Gameboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Gameboard.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/tests/test_GameController.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/test_GameController.py" afterDir="false" />
     </list>
     <list id="b53ad74c-d01b-4e52-9a34-f524bfab6613" name="Changes by Kent Max Chandra" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -33,7 +45,7 @@
   <component name="GithubPullRequestsUISettings">{
   &quot;selectedUrlAndAccountId&quot;: {
     &quot;url&quot;: &quot;https://github.com/PhDinTimeManagement/The-Monopoly-Game-Project.git&quot;,
-    &quot;accountId&quot;: &quot;92e91e34-3118-423c-bd88-520f2a36a0e6&quot;
+    &quot;accountId&quot;: &quot;4537f682-7852-42ab-b340-e62171856620&quot;
   }
 }</component>
   <component name="MarkdownSettingsMigration">
@@ -51,31 +63,37 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.executor&quot;: &quot;Coverage&quot;,
-    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner.executor&quot;: &quot;Coverage&quot;,
-    &quot;Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor&quot;: &quot;Run&quot;,
-    &quot;Python tests.Python tests for test_Gameboard.TestProperty.executor&quot;: &quot;Run&quot;,
-    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
-    &quot;Python.GUI.executor&quot;: &quot;Run&quot;,
-    &quot;Python.gui.executor&quot;: &quot;Run&quot;,
-    &quot;Python.new.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Programming Projects/The-Monopoly-Game-Project.1&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python tests.Python tests for test_GameController.TestGameController.executor": "Run",
+    "Python tests.Python tests for test_GameController.TestGameController.test_load_game.executor": "Run",
+    "Python tests.Python tests for test_GameController.TestGameController.test_save_game.executor": "Run",
+    "Python tests.Python tests for test_GameLogic.TestGameLogic.executor": "Run",
+    "Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner.executor": "Run",
+    "Python tests.Python tests for test_GameLogic.TestGameLogic.test_game_ends.executor": "Run",
+    "Python tests.Python tests for test_GameLogic.TestGameLogic.test_get_player_turn.executor": "Run",
+    "Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out.executor": "Run",
+    "Python tests.Python tests for test_Gameboard.TestProperty.executor": "Run",
+    "Python tests.Python tests in test_GameController.py.executor": "Run",
+    "Python tests.Python tests in tests.executor": "Run",
+    "Python.GUI.executor": "Run",
+    "Python.gui.executor": "Run",
+    "Python.new.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "TODO_SCOPE": "All Places",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "main",
+    "last_opened_file_path": "C:/Users/Hp/Desktop/The-Monopoly-Game-Project/src",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="PyCoverageOptionsProvider">
     <option name="myUseBundledCoveragePy" value="true" />
   </component>
@@ -90,7 +108,7 @@
       <recent name="D:\PolyU\PolyU Year 3\COMP3211 Software Engineering\Project Github\src\Model" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.GUI">
+  <component name="RunManager" selected="Python tests.Python tests for test_GameController.TestGameController.test_load_game">
     <configuration name="GUI" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
@@ -114,7 +132,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="Python tests for test_GameLogic.TestGameLogic" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
+    <configuration name="Python tests for test_GameController.TestGameController" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -126,11 +144,11 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
       <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_GameLogic.TestGameLogic&quot;" />
+      <option name="_new_target" value="&quot;test_GameController.TestGameController&quot;" />
       <option name="_new_targetType" value="&quot;PYTHON&quot;" />
       <method v="2" />
     </configuration>
-    <configuration name="Python tests for test_GameLogic.TestGameLogic.test_display_winner" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
+    <configuration name="Python tests for test_GameController.TestGameController.test_load_game" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -142,11 +160,11 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
       <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_GameLogic.TestGameLogic.test_display_winner&quot;" />
+      <option name="_new_target" value="&quot;test_GameController.TestGameController.test_load_game&quot;" />
       <option name="_new_targetType" value="&quot;PYTHON&quot;" />
       <method v="2" />
     </configuration>
-    <configuration name="Python tests for test_GameLogic.TestGameLogic.test_player_out" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
+    <configuration name="Python tests for test_GameController.TestGameController.test_save_game" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
       <module name="Source Code" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -158,24 +176,59 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
       <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_GameLogic.TestGameLogic.test_player_out&quot;" />
+      <option name="_new_target" value="&quot;test_GameController.TestGameController.test_save_game&quot;" />
       <option name="_new_targetType" value="&quot;PYTHON&quot;" />
       <method v="2" />
     </configuration>
+    <configuration name="Python tests in test_GameController.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
+      <module name="Source Code" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="_new_additionalArguments" value="&quot;&quot;" />
+      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_GameController.py&quot;" />
+      <option name="_new_targetType" value="&quot;PATH&quot;" />
+      <method v="2" />
+    </configuration>
+    <configuration default="true" type="tests" factoryName="Unittests">
+      <module name="Source Code" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="$USER_HOME$/miniconda3/python.exe" />
+      <option name="SDK_NAME" value="C:\Users\tommy\miniconda3" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="_new_pattern" value="&quot;&quot;" />
+      <option name="_new_additionalArguments" value="&quot;&quot;" />
+      <option name="_new_target" value="&quot;&quot;" />
+      <option name="_new_targetType" value="&quot;PATH&quot;" />
+      <method v="2" />
+    </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Python tests.Python tests for test_GameController.TestGameController.test_load_game" />
+        <item itemvalue="Python tests.Python tests for test_GameController.TestGameController" />
+        <item itemvalue="Python tests.Python tests in test_GameController.py" />
+        <item itemvalue="Python tests.Python tests for test_GameController.TestGameController.test_save_game" />
         <item itemvalue="Python.GUI" />
-        <item itemvalue="Python tests.Python tests for test_GameLogic.TestGameLogic" />
-        <item itemvalue="Python tests.Python tests for test_GameLogic.TestGameLogic.test_display_winner" />
-        <item itemvalue="Python tests.Python tests for test_GameLogic.TestGameLogic.test_player_out" />
       </list>
     </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153" />
-        <option value="bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153" />
+        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.23726.102" />
+        <option value="bundled-python-sdk-5e1850174b45-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23726.102" />
       </set>
     </attachedChunks>
   </component>
@@ -210,7 +263,7 @@
       <workItem from="1730377042614" duration="1385000" />
       <workItem from="1730743920545" duration="780000" />
       <workItem from="1730767053814" duration="1079000" />
-      <workItem from="1730770731790" duration="7588000" />
+      <workItem from="1730770731790" duration="4357000" />
     </task>
     <task id="LOCAL-00001" summary="gameboard functions">
       <created>1729259402457</created>
@@ -320,19 +373,13 @@
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
-    <watches-manager>
-      <configuration name="tests">
-        <watch expression="player1.get_current_money()" language="Python" />
-        <watch expression="wan_chai.get_rent()" language="Python" />
-        <watch expression="wan_chai.get_rent()+player1.get_current_money()" language="Python" />
-      </configuration>
-    </watches-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730198824506" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
-    <SUITE FILE_PATH="coverage/Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730792517292" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/Game_py$new.coverage" NAME="new Coverage Results" MODIFIED="1730338734766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/Game_py$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1730793276607" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
+    <SUITE FILE_PATH="coverage/The_Monopoly_Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730803062290" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
+    <SUITE FILE_PATH="coverage/Game_py$.coverage" NAME=" Coverage Results" MODIFIED="1730793809543" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
     <SUITE FILE_PATH="coverage/Game_py$Test.coverage" NAME="Test Coverage Results" MODIFIED="1730432574768" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/Game_py$gui.coverage" NAME="gui Coverage Results" MODIFIED="1730294710638" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
-    <SUITE FILE_PATH="coverage/Game_py$new.coverage" NAME="new Coverage Results" MODIFIED="1730338734766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/View" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Game.py
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.name b/.idea/.name
--- a/.idea/.name	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/.idea/.name	(date 1730799893576)
@@ -1,1 +1,1 @@
-Game.py
\ No newline at end of file
+The Monopoly Game.py
\ No newline at end of file
Index: src/Model/Gameboard.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\n\r\n\r\nclass Tile:\r\n    \"\"\"Parent class for all tiles\"\"\"\r\n\r\n    def __init__(self, name, board_pos):\r\n        self.name = name\r\n        self.board_pos = int(board_pos)\r\n        self.tile_type = None\r\n\r\n    def get_tile_position(self):\r\n        return self.board_pos\r\n\r\n    def get_tile_name(self):\r\n        return self.name\r\n\r\n    def set_tile_name(self, new_name):\r\n        self.name = new_name\r\n\r\n    def set_tile_pos(self, board_pos):\r\n        self.board_pos = board_pos\r\n\r\n    def set_tile_type(self, tile_type):\r\n        self.tile_type = tile_type\r\n\r\n    \"\"\"Manages what happens to a player that lands on the tile\"\"\"\r\n    # noinspection PyStatementEffect\r\n    \"\"\"\r\n           By Kent: This should be a class method. I have modified it, since I want to use dynamic binding here\r\n           to decrease the complexity of the game logic. Every class will have a player_landed\r\n        \"\"\"\r\n    @classmethod\r\n    def player_landed(cls, player):\r\n        return None\r\n\r\n    def update_name_pos_type(self, tile_name: str, board_pos: int, tile_type: str = \"\") -> None:\r\n        self.set_tile_name(tile_name)\r\n        self.set_tile_pos(board_pos)\r\n        if not tile_type == \"\":\r\n            self.set_tile_type(tile_type)\r\n\r\n\r\nclass Property(Tile):\r\n    \"\"\"  Property has the following attributes\r\n    All attributes have to be passed when initialized \"\"\"\r\n\r\n    def __init__(self, name, board_pos, price, rent, owner, color):\r\n        super().__init__(name, board_pos)\r\n        self.price = price\r\n        self.rent = rent\r\n        self.owner = owner\r\n        self.color = color\r\n        self.tile_type = \"property\"\r\n\r\n    def get_property_name(self):\r\n        return self.name\r\n\r\n    def get_rent(self):\r\n        return self.rent\r\n\r\n    def set_rent(self, new_rent):\r\n        self.rent = new_rent\r\n\r\n    def get_price(self):\r\n        return self.price\r\n\r\n    def set_price(self, new_price):\r\n        self.price = new_price\r\n\r\n    def get_owner(self):\r\n        return self.owner\r\n\r\n    def set_owner(self, new_owner):\r\n        self.owner = new_owner\r\n\r\n    def get_color(self):\r\n        return self.color\r\n\r\n    def set_color(self, new_color):\r\n        self.color = new_color\r\n\r\n    def update_values(self, price: int, rent: int, owner: object, color: str) -> None:\r\n        self.set_price(price)\r\n        self.set_rent(rent)\r\n        self.set_owner(owner)\r\n        self.set_color(color)\r\n\r\n    def buy(self, player):\r\n        \"\"\" if property has no owner can be bought, then checks player balance\r\n            if enough: removes money, adds property to player, sets property new owner\r\n            returns 0 for not enough money, 1 for success \"\"\"\r\n        if player.get_current_money() >= self.price:\r\n            player.remove_money(self.price)\r\n            player.add_properties(self)\r\n            self.set_owner(player)\r\n            print(f\"{player.get_name()} bought {self.name} for {self.get_price()} HKD\")\r\n            return True\r\n        else:\r\n            print(f\"{player.get_name()}'s balance is not enough to buy {self.name}\")\r\n            return False\r\n\r\n    def pay_rent(self, player):\r\n        rent_amount = self.get_rent()   # gets rent value\r\n        if player.get_current_money() < rent_amount:    # checks if player has enough money to pay\r\n            rent_amount = player.get_current_money()  # if not gets all the player can give\r\n        player.remove_money(self.get_rent())    # removes from the player total what is owed\r\n        self.owner.add_money(rent_amount)  # all money available is added to the owner\r\n        print(f\"{player.get_name()} payed {rent_amount} HKD to {self.owner.get_name()}\")\r\n        return player.get_current_money()   # current player amount is returned (only for testing)\r\n\r\n    def player_landed(self, player):\r\n        \"\"\"provides option to the player\"\"\"\r\n        if self.owner is None:\r\n            return True\r\n            #message = f\"{self.name} is available for purchase. Listed at {self.get_price()} HKD\"\r\n            \"\"\"TODO GET INPUT FROM PLAYER if INPUT == BUY TILE: self.buy(player)\"\"\"\r\n        else:\r\n            #message = f\"{self.name} is owned by {self.get_owner()}. {player.get_name()} owes {self.get_price()} HKD\"\r\n            self.pay_rent(player)\r\n            return False\r\n        #return message\r\n\r\n\r\nclass Jail(Tile):\r\n    \"\"\"Initialize the empty array of jailed players\"\"\"\r\n    def __init__(self, board_pos, jailed_players):\r\n        super().__init__(\"Jail\", board_pos)\r\n        self.jailed_players = jailed_players\r\n        self.tile_type = \"jail\"\r\n\r\n    def set_jailed_players(self, jailed_players):\r\n        self.jailed_players = jailed_players.copy()\r\n\r\n    def get_jailed_players(self):\r\n        return self.jailed_players\r\n\r\n    def update_values(self, jailed_players):\r\n        self.set_jailed_players(jailed_players)\r\n\r\n    def free_player(self, player):\r\n        self.jailed_players.remove(player)\r\n        print(f\"{player.get_name()} is freed from Jail\")\r\n\r\n\r\n    def player_landed(self, player):\r\n        return None\r\n\r\n\r\n# initialized here in order to be hardcoded into go to jail tile\r\nJailTile = Jail(5, [])\r\n\r\n\r\nclass Go(Tile):\r\n    \"\"\"Initialize the prize for passing amount\"\"\"\r\n    def __init__(self, prize):\r\n        super().__init__(\"Go\", 0)\r\n        self.pass_prize = prize\r\n        self.tile_type = \"go\"\r\n\r\n    def get_pass_prize(self):\r\n        return self.pass_prize\r\n\r\n    def set_pass_prize(self, new_prize):\r\n        self.pass_prize = new_prize\r\n\r\n    def update_values(self, pass_prize):\r\n        self.set_pass_prize(pass_prize)\r\n\r\n    \"\"\"When called adds pass_prize to the player balance\"\"\"\r\n    def player_landed(self, player):\r\n        player.add_money(self.get_pass_prize())\r\n        return None\r\n\r\nclass GoToJail(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Go To Jail\", board_pos)\r\n        self.tile_type = \"go_to_jail\"\r\n\r\n    @staticmethod\r\n    def arrest_player(player):\r\n        player.set_jail_status(True)\r\n        player.set_in_jail_turns(3)     # sets max turns to spend in jail\r\n        player.set_current_square(JailTile.get_tile_position())    # the player position is updated to the jail position\r\n        JailTile.jailed_players.append(player)      # puts the player name in the jail list of detainees\r\n        print(f\"{player.get_name()} has been locked up\")\r\n\r\n    def player_landed(self, player):\r\n        return self.arrest_player(player)\r\n\r\n\r\nclass Chance(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Chance\", board_pos)\r\n        self.tile_type = \"chance\"\r\n\r\n    def player_landed(self, player):\r\n        good_chance = int(random.random() * 2)\r\n        if good_chance:\r\n            amount = int(random.random() * 21) * 10\r\n            player.add_money(amount)\r\n        else:\r\n            amount = int(random.random() * 31) * 10\r\n            player.remove_money(amount)\r\n        return None\r\n\r\n\r\nclass IncomeTax(Tile):\r\n    def __init__(self, board_pos, new_tax):\r\n        super().__init__(\"IncomeTax\", board_pos)\r\n        self.tax_percentage = new_tax\r\n        self.tile_type = \"income_tax\"\r\n\r\n    def set_income_tax(self, new_tax):\r\n        self.tax_percentage = new_tax\r\n\r\n    def update_values(self, income_tax):\r\n        self.set_income_tax(income_tax)\r\n\r\n    def calculate_tax(self, player):\r\n        return int(player.get_current_money() / 100) * self.tax_percentage  # tax_percentage ROUNDED DOWN TO NEAREST 10x\r\n\r\n    def player_landed(self, player):\r\n        tax_amount = self.calculate_tax(player)\r\n        player.remove_money(tax_amount)\r\n        return None\r\n\r\n\r\nclass FreeParking(Tile):\r\n    def __init__(self, board_pos):\r\n        super().__init__(\"Free Parking\", board_pos)\r\n        self.tile_type = \"free_parking\"\r\n\r\n    def player_landed(self, player):\r\n        return None\r\n\r\n\r\nclass Gameboard:\r\n    def __init__(self):\r\n        self.tiles = [Go(1500),\r\n                      Property(\"Central\", 1, 800, 90, None, \"Blue\"),\r\n                      Property(\"Wan Chai\", 2, 700, 65, None, \"Blue\"),\r\n                      IncomeTax(3, 10),\r\n                      Property(\"Stanley\", 4, 600, 60, None, \"Blue\"),\r\n                      JailTile,     # initialized globally after Jail to be used in goToJail\r\n                      Property(\"Shek-O\", 6, 400, 10, None, \"Red\"),\r\n                      Property(\"Mong Kok\", 7, 500, 40, None, \"Red\"),\r\n                      Chance(8),\r\n                      Property(\"Tsing Yi\", 9, 400, 15, None, \"Red\"),\r\n                      FreeParking(10),\r\n                      Property(\"Shatin\", 11, 700, 75, None, \"Green\"),\r\n                      Chance(12),\r\n                      Property(\"Tuen Mun\", 13, 400, 20, None, \"Green\"),\r\n                      Property(\"Tai Po\", 14, 500, 25, None, \"Green\"),\r\n                      GoToJail(15),\r\n                      Property(\"Sai Kung\", 16, 400, 10, None, \"Yellow\"),\r\n                      Property(\"Yuen Long\", 17, 400, 25, None, \"Yellow\"),\r\n                      Chance(18),\r\n                      Property(\"Tai O\", 19, 600, 25, None, \"Yellow\")\r\n                      ]     # Stores different Tile Objects. Can be customized by the user\r\n\r\n    def get_jail_tile(self):\r\n        for i in range (0,len(self.tiles)):\r\n            if self.tiles[i].name == \"Jail\":\r\n                return self.tiles[i]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Gameboard.py b/src/Model/Gameboard.py
--- a/src/Model/Gameboard.py	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/src/Model/Gameboard.py	(date 1730802823927)
@@ -139,18 +139,14 @@
         self.set_jailed_players(jailed_players)
 
     def free_player(self, player):
-        self.jailed_players.remove(player)
-        print(f"{player.get_name()} is freed from Jail")
+        self.jailed_players.remove(player.get_name())
+        message = f"{player.get_name()} is freed from Jail"
+        return message
 
 
     def player_landed(self, player):
         return None
 
-
-# initialized here in order to be hardcoded into go to jail tile
-JailTile = Jail(5, [])
-
-
 class Go(Tile):
     """Initialize the prize for passing amount"""
     def __init__(self, prize):
@@ -172,21 +168,24 @@
         player.add_money(self.get_pass_prize())
         return None
 
+
+# noinspection PyMethodOverriding
 class GoToJail(Tile):
     def __init__(self, board_pos):
         super().__init__("Go To Jail", board_pos)
         self.tile_type = "go_to_jail"
 
     @staticmethod
-    def arrest_player(player):
+    def arrest_player(player, jail):
         player.set_jail_status(True)
         player.set_in_jail_turns(3)     # sets max turns to spend in jail
-        player.set_current_square(JailTile.get_tile_position())    # the player position is updated to the jail position
-        JailTile.jailed_players.append(player)      # puts the player name in the jail list of detainees
-        print(f"{player.get_name()} has been locked up")
+        player.set_current_square(jail.get_tile_position())    # the player position is updated to the jail position
+        jail.jailed_players.append(player.get_name())      # puts the player name in the jail list of detainees
+        message = "{player.get_name()} has been locked up"
+        return message
 
-    def player_landed(self, player):
-        return self.arrest_player(player)
+    def player_landed(self, player, jailTile):
+        return self.arrest_player(player, jailTile)
 
 
 class Chance(Tile):
@@ -242,7 +241,7 @@
                       Property("Wan Chai", 2, 700, 65, None, "Blue"),
                       IncomeTax(3, 10),
                       Property("Stanley", 4, 600, 60, None, "Blue"),
-                      JailTile,     # initialized globally after Jail to be used in goToJail
+                      Jail(5, []),
                       Property("Shek-O", 6, 400, 10, None, "Red"),
                       Property("Mong Kok", 7, 500, 40, None, "Red"),
                       Chance(8),
Index: tests/test_GameController.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from unittest import TestCase\r\nfrom src.Controller.GameController import *\r\nfrom src.Model.Player import *\r\n\r\nclass TestGameController(TestCase):\r\n    def test_load_game(self):\r\n        local_controller = GameController()\r\n        GameController.load_game(local_controller)\r\n        assert local_controller.get_current_round() == 50\r\n        assert local_controller.board.tiles[0].get_tile_name() == \"Start\"\r\n        assert local_controller.board.tiles[0].get_pass_prize() == 3000\r\n        assert local_controller.get_broke_player_list()[0].get_name() == \"BROKE PLAYER\"\r\n        assert local_controller.get_broke_player_list()[0].get_current_money() == -1500\r\n        assert local_controller.get_broke_player_list()[0].get_jail_status() == True\r\n        assert local_controller.get_broke_player_list()[0].get_square() == 6\r\n        assert local_controller.get_broke_player_list()[0].get_in_jail_turns() == 2\r\n\r\n    def test_save_game(self):\r\n        test_controller = GameController()\r\n        Player1 = Player(\"Player 1\")\r\n        Player2 = Player(\"Player 2\")\r\n        Player3 = Player(\"Player 3\")\r\n        Player2.update_values(\"BROKE PLAYER\", -1500, True, False, 6, 2, [])\r\n        test_controller.set_player_list([Player1, Player3])\r\n        test_controller.set_broke_player_list([Player2])\r\n        test_controller.board.tiles[15].player_landed(Player3)\r\n        test_controller.save_game()\r\n\r\n    def test_set_player_list(self):\r\n        test_controller1 = GameController()\r\n        Player1 = Player(\"Player 1\")\r\n        Player2 = Player(\"Player 2\")\r\n        player_list = [Player1, Player2]\r\n        test_controller1.set_player_list([Player1, Player2])\r\n        self.assertListEqual(test_controller1.get_player_list(), player_list)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_GameController.py b/tests/test_GameController.py
--- a/tests/test_GameController.py	(revision 06c0ecad0032c2981b98d744f056abef37a647c8)
+++ b/tests/test_GameController.py	(date 1730803112168)
@@ -1,11 +1,48 @@
-from unittest import TestCase
+import unittest
+from unittest import *
 from src.Controller.GameController import *
 from src.Model.Player import *
 
 class TestGameController(TestCase):
+    def test_set_player_list(self):
+        test_controller1 = GameController()
+        Player1 = Player("Player 1")
+        Player2 = Player("Player 2")
+        player_list = [Player1, Player2]
+        test_controller1.set_player_list([Player1, Player2])
+        self.assertListEqual(test_controller1.get_player_list(), player_list)
+
+    def test_save_game(self):
+        test_controller = GameController()
+
+        test_controller.set_current_round(50)
+
+        test_controller.board.tiles[0].set_tile_name("Start")
+        test_controller.board.tiles[0].set_pass_prize(3000)
+
+        # setting up the save file information to be used in the LOAD_TEST
+        Player1 = Player("Player 1")
+        Player2 = Player("Player 2")
+        Player3 = Player("Player 3")
+        jailTile = test_controller.board.tiles[5]
+        Player2.update_values("BROKE PLAYER", -1500, True, False, 6, 2, [])
+        test_controller.set_player_list([Player1, Player3])
+        test_controller.set_broke_player_list([Player2])
+        test_controller.board.tiles[15].player_landed(Player3, jailTile)
+
+
+        save_name = "SAVE_LOAD_TEST"
+        test_controller.save_game(save_name)
+
     def test_load_game(self):
+        # runs the save test first to generate the test file in case it's missing
+        TestGameController.test_save_game(self)
+
         local_controller = GameController()
-        GameController.load_game(local_controller)
+
+        load_name = "SAVE_LOAD_TEST"
+        local_controller.load_game(load_name)
+
         assert local_controller.get_current_round() == 50
         assert local_controller.board.tiles[0].get_tile_name() == "Start"
         assert local_controller.board.tiles[0].get_pass_prize() == 3000
@@ -14,23 +51,5 @@
         assert local_controller.get_broke_player_list()[0].get_jail_status() == True
         assert local_controller.get_broke_player_list()[0].get_square() == 6
         assert local_controller.get_broke_player_list()[0].get_in_jail_turns() == 2
-
-    def test_save_game(self):
-        test_controller = GameController()
-        Player1 = Player("Player 1")
-        Player2 = Player("Player 2")
-        Player3 = Player("Player 3")
-        Player2.update_values("BROKE PLAYER", -1500, True, False, 6, 2, [])
-        test_controller.set_player_list([Player1, Player3])
-        test_controller.set_broke_player_list([Player2])
-        test_controller.board.tiles[15].player_landed(Player3)
-        test_controller.save_game()
-
-    def test_set_player_list(self):
-        test_controller1 = GameController()
-        Player1 = Player("Player 1")
-        Player2 = Player("Player 2")
-        player_list = [Player1, Player2]
-        test_controller1.set_player_list([Player1, Player2])
-        self.assertListEqual(test_controller1.get_player_list(), player_list)
+        self.assertEqual(len(local_controller.board.tiles[5].get_jailed_players()) ,1)
 
